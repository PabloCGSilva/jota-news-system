{
  "timestamp": "2025-07-11T21:49:40.980699",
  "tests": {
    "unit": {
      "status": "failed",
      "error": "time=\"2025-07-11T21:50:09-03:00\" level=warning msg=\"/mnt/c/Users/pablo/JOTA/jota-news-system/docker-compose.yml: `version` is obsolete\"\n",
      "output": "============================= test session starts ==============================\nplatform linux -- Python 3.11.13, pytest-7.4.3, pluggy-1.6.0 -- /usr/local/bin/python3.11\ncachedir: .pytest_cache\ndjango: version: 4.2.7\nrootdir: /app\nconfigfile: pytest.ini\nplugins: Faker-37.4.0, cov-4.1.0, django-4.7.0, anyio-4.9.0\ncollecting ... collected 37 items\n\ntests/unit/test_classification_models.py::TestClassificationRule::test_create_classification_rule PASSED [  2%]\ntests/unit/test_classification_models.py::TestClassificationRule::test_rule_increment_matches PASSED [  5%]\ntests/unit/test_classification_models.py::TestClassificationRule::test_rule_increment_successful_classifications PASSED [  8%]\ntests/unit/test_classification_models.py::TestClassificationRule::test_rule_success_rate_calculation PASSED [ 10%]\ntests/unit/test_classification_models.py::TestClassificationRule::test_rule_unique_name PASSED [ 13%]\ntests/unit/test_classification_models.py::TestClassificationModel::test_create_classification_model PASSED [ 16%]\ntests/unit/test_classification_models.py::TestClassificationModel::test_model_increment_predictions PASSED [ 18%]\ntests/unit/test_classification_models.py::TestClassificationResult::test_create_classification_result PASSED [ 21%]\ntests/unit/test_classification_models.py::TestClassificationResult::test_accept_classification PASSED [ 24%]\ntests/unit/test_classification_models.py::TestClassificationTrainingData::test_create_training_data PASSED [ 27%]\ntests/unit/test_classification_models.py::TestClassificationStatistic::test_create_classification_statistic PASSED [ 29%]\ntests/unit/test_classification_models.py::TestClassificationStatistic::test_statistic_success_rate_calculation PASSED [ 32%]\ntests/unit/test_news_models.py::TestCategoryModel::test_create_category FAILED [ 35%]\ntests/unit/test_news_models.py::TestCategoryModel::test_category_unique_name PASSED [ 37%]\ntests/unit/test_news_models.py::TestCategoryModel::test_category_unique_slug PASSED [ 40%]\ntests/unit/test_news_models.py::TestSubcategoryModel::test_create_subcategory PASSED [ 43%]\ntests/unit/test_news_models.py::TestSubcategoryModel::test_subcategory_category_slug_unique_together PASSED [ 45%]\ntests/unit/test_news_models.py::TestTagModel::test_create_tag PASSED     [ 48%]\ntests/unit/test_news_models.py::TestTagModel::test_tag_unique_name PASSED [ 51%]\ntests/unit/test_news_models.py::TestNewsModel::test_create_news PASSED   [ 54%]\ntests/unit/test_news_models.py::TestNewsModel::test_news_auto_word_count PASSED [ 56%]\ntests/unit/test_news_models.py::TestNewsModel::test_news_auto_reading_time PASSED [ 59%]\ntests/unit/test_news_models.py::TestNewsModel::test_news_auto_summary_generation PASSED [ 62%]\ntests/unit/test_news_models.py::TestNewsModel::test_news_increment_view_count PASSED [ 64%]\ntests/unit/test_news_models.py::TestNewsModel::test_news_increment_share_count PASSED [ 67%]\ntests/unit/test_news_models.py::TestNewsModel::test_news_external_id_unique PASSED [ 70%]\ntests/unit/test_news_models.py::TestNewsProcessingLog::test_create_processing_log PASSED [ 72%]\ntests/unit/test_news_serializers.py::TestCategorySerializer::test_serialize_category PASSED [ 75%]\ntests/unit/test_news_serializers.py::TestCategorySerializer::test_deserialize_category PASSED [ 78%]\ntests/unit/test_news_serializers.py::TestSubcategorySerializer::test_serialize_subcategory FAILED [ 81%]\ntests/unit/test_news_serializers.py::TestTagSerializer::test_serialize_tag PASSED [ 83%]\ntests/unit/test_news_serializers.py::TestNewsSerializers::test_news_list_serializer PASSED [ 86%]\ntests/unit/test_news_serializers.py::TestNewsSerializers::test_news_detail_serializer PASSED [ 89%]\ntests/unit/test_news_serializers.py::TestNewsSerializers::test_news_create_serializer PASSED [ 91%]\ntests/unit/test_news_serializers.py::TestNewsSerializers::test_news_update_serializer PASSED [ 94%]\ntests/unit/test_news_serializers.py::TestNewsSerializers::test_news_create_serializer_validation PASSED [ 97%]\ntests/unit/test_news_serializers.py::TestNewsSerializers::test_news_create_with_duplicate_external_id PASSED [100%]\n\n=================================== FAILURES ===================================\n____________________ TestCategoryModel.test_create_category ____________________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x7cb8e61c5850>\nsql = 'INSERT INTO \"news_category\" (\"id\", \"created_at\", \"updated_at\", \"name\", \"slug\", \"description\", \"keywords\", \"is_active\") VALUES (%s, %s, %s, %s, %s, %s, %s::varchar(50)[], %s)'\nparams = (UUID('33a440cf-d44b-4569-8f54-8276f7725769'), datetime.datetime(2025, 7, 12, 0, 50, 15, 313771, tzinfo=datetime.timez...time(2025, 7, 12, 0, 50, 15, 313789, tzinfo=datetime.timezone.utc), 'Technology', 'technology', 'Technology news', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7cb8e61c5850>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_category_name_key\"\nE               DETAIL:  Key (name)=(Technology) already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.unit.test_news_models.TestCategoryModel object at 0x7cb92a93bb10>\ndb = None\n\n    def test_create_category(self, db):\n        \"\"\"Test creating a category.\"\"\"\n>       category = Category.objects.create(\n            name='Technology',\n            slug='technology',\n            description='Technology news',\n            keywords=['tech', 'innovation', 'digital']\n        )\n\ntests/unit/test_news_models.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x7cb8e61c5850>\nsql = 'INSERT INTO \"news_category\" (\"id\", \"created_at\", \"updated_at\", \"name\", \"slug\", \"description\", \"keywords\", \"is_active\") VALUES (%s, %s, %s, %s, %s, %s, %s::varchar(50)[], %s)'\nparams = (UUID('33a440cf-d44b-4569-8f54-8276f7725769'), datetime.datetime(2025, 7, 12, 0, 50, 15, 313771, tzinfo=datetime.timez...time(2025, 7, 12, 0, 50, 15, 313789, tzinfo=datetime.timezone.utc), 'Technology', 'technology', 'Technology news', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7cb8e61c5850>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_category_name_key\"\nE               DETAIL:  Key (name)=(Technology) already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n_____________ TestSubcategorySerializer.test_serialize_subcategory _____________\n\nself = <tests.unit.test_news_serializers.TestSubcategorySerializer object at 0x7cb92a531910>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\n\n    def test_serialize_subcategory(self, subcategory):\n        \"\"\"Test serializing a subcategory.\"\"\"\n        serializer = SubcategorySerializer(subcategory)\n        data = serializer.data\n    \n        assert data['name'] == subcategory.name\n>       assert data['category'] == str(subcategory.category.id)\nE       AssertionError: assert UUID('b074b182-bd1d-4fe2-86a2-f46c6717f49c') == 'b074b182-bd1d-4fe2-86a2-f46c6717f49c'\nE        +  where 'b074b182-bd1d-4fe2-86a2-f46c6717f49c' = str(UUID('b074b182-bd1d-4fe2-86a2-f46c6717f49c'))\nE        +    where UUID('b074b182-bd1d-4fe2-86a2-f46c6717f49c') = <Category: Test Category>.id\nE        +      where <Category: Test Category> = <Subcategory: Test Category - Test Subcategory>.category\n\ntests/unit/test_news_serializers.py:60: AssertionError\n=============================== warnings summary ===============================\ntests/unit/test_classification_models.py:14\n  /app/tests/unit/test_classification_models.py:14: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_classification_models.py:80\n  /app/tests/unit/test_classification_models.py:80: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_classification_models.py:119\n  /app/tests/unit/test_classification_models.py:119: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_classification_models.py:172\n  /app/tests/unit/test_classification_models.py:172: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_classification_models.py:196\n  /app/tests/unit/test_classification_models.py:196: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_models.py:13\n  /app/tests/unit/test_news_models.py:13: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_models.py:49\n  /app/tests/unit/test_news_models.py:49: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_models.py:84\n  /app/tests/unit/test_news_models.py:84: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_models.py:110\n  /app/tests/unit/test_news_models.py:110: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_models.py:209\n  /app/tests/unit/test_news_models.py:209: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_serializers.py:15\n  /app/tests/unit/test_news_serializers.py:15: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_serializers.py:50\n  /app/tests/unit/test_news_serializers.py:50: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_serializers.py:65\n  /app/tests/unit/test_news_serializers.py:65: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_serializers.py:79\n  /app/tests/unit/test_news_serializers.py:79: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n\n---------- coverage: platform linux, python 3.11.13-final-0 ----------\nName                                                                           Stmts   Miss  Cover\n--------------------------------------------------------------------------------------------------\napps/__init__.py                                                                   0      0   100%\napps/authentication/__init__.py                                                    0      0   100%\napps/authentication/admin.py                                                      34      4    88%\napps/authentication/apps.py                                                       10      0   100%\napps/authentication/backends.py                                                   24     24     0%\napps/authentication/drf_authentication.py                                         38     38     0%\napps/authentication/migrations/0001_initial.py                                    11     11     0%\napps/authentication/migrations/__init__.py                                         0      0   100%\napps/authentication/models.py                                                     63      7    89%\napps/authentication/serializers.py                                                97     97     0%\napps/authentication/urls.py                                                       19     19     0%\napps/authentication/views.py                                                     104    104     0%\napps/classification/__init__.py                                                    0      0   100%\napps/classification/admin.py                                                     144     63    56%\napps/classification/apps.py                                                        7      0   100%\napps/classification/classifier.py                                                225    166    26%\napps/classification/migrations/0001_initial.py                                     8      8     0%\napps/classification/migrations/__init__.py                                         0      0   100%\napps/classification/models.py                                                    162      1    99%\napps/classification/serializers.py                                                87     87     0%\napps/classification/signals.py                                                    38      6    84%\napps/classification/tasks.py                                                     168    146    13%\napps/classification/urls.py                                                       12     12     0%\napps/classification/views.py                                                     168    168     0%\napps/demo/__init__.py                                                              0      0   100%\napps/demo/apps.py                                                                  5      0   100%\napps/demo/urls.py                                                                  4      4     0%\napps/demo/views.py                                                               161    161     0%\napps/news/__init__.py                                                              0      0   100%\napps/news/admin.py                                                                91     20    78%\napps/news/apps.py                                                                  7      0   100%\napps/news/filters.py                                                              62     62     0%\napps/news/management/__init__.py                                                   0      0   100%\napps/news/management/commands/__init__.py                                          0      0   100%\napps/news/management/commands/create_sample_data.py                               77     77     0%\napps/news/migrations/0001_initial.py                                              11     11     0%\napps/news/migrations/0002_remove_news_news_news_title_ad75b1_gin_and_more.py       5      5     0%\napps/news/migrations/__init__.py                                                   0      0   100%\napps/news/models.py                                                              121      1    99%\napps/news/pagination.py                                                           15     15     0%\napps/news/serializers.py                                                          92      0   100%\napps/news/signals.py                                                              39      3    92%\napps/news/tasks.py                                                                93     93     0%\napps/news/urls.py                                                                 12     12     0%\napps/news/views.py                                                               149    149     0%\napps/notifications/__init__.py                                                     0      0   100%\napps/notifications/admin.py                                                      141     56    60%\napps/notifications/apps.py                                                         7      0   100%\napps/notifications/migrations/0001_initial.py                                      9      9     0%\napps/notifications/migrations/__init__.py                                          0      0   100%\napps/notifications/models.py                                                     202     64    68%\napps/notifications/providers.py                                                  140    106    24%\napps/notifications/serializers.py                                                129    129     0%\napps/notifications/signals.py                                                     37     25    32%\napps/notifications/tasks.py                                                      194    171    12%\napps/notifications/urls.py                                                        12     12     0%\napps/notifications/views.py                                                      211    211     0%\napps/webhooks/__init__.py                                                          0      0   100%\napps/webhooks/admin.py                                                           105     40    62%\napps/webhooks/apps.py                                                              7      0   100%\napps/webhooks/migrations/0001_initial.py                                           7      7     0%\napps/webhooks/migrations/__init__.py                                               0      0   100%\napps/webhooks/models.py                                                          124     30    76%\napps/webhooks/serializers.py                                                      81     81     0%\napps/webhooks/signals.py                                                          28     18    36%\napps/webhooks/tasks.py                                                           151    151     0%\napps/webhooks/urls.py                                                              9      9     0%\napps/webhooks/utils.py                                                           121    121     0%\napps/webhooks/views.py                                                           138    138     0%\n--------------------------------------------------------------------------------------------------\nTOTAL                                                                           4216   2952    30%\nCoverage JSON written to file coverage.json\n\n=========================== short test summary info ============================\nFAILED tests/unit/test_news_models.py::TestCategoryModel::test_create_category\nFAILED tests/unit/test_news_serializers.py::TestSubcategorySerializer::test_serialize_subcategory\n================== 2 failed, 35 passed, 14 warnings in 11.02s ==================\n"
    },
    "integration": {
      "status": "failed",
      "error": "time=\"2025-07-11T21:50:24-03:00\" level=warning msg=\"/mnt/c/Users/pablo/JOTA/jota-news-system/docker-compose.yml: `version` is obsolete\"\n",
      "output": "============================= test session starts ==============================\nplatform linux -- Python 3.11.13, pytest-7.4.3, pluggy-1.6.0 -- /usr/local/bin/python3.11\ncachedir: .pytest_cache\ndjango: version: 4.2.7\nrootdir: /app\nconfigfile: pytest.ini\nplugins: Faker-37.4.0, cov-4.1.0, django-4.7.0, anyio-4.9.0\ncollecting ... collected 32 items\n\ntests/integration/test_news_api.py::TestNewsAPI::test_list_news_authenticated FAILED [  3%]\ntests/integration/test_news_api.py::TestNewsAPI::test_list_news_unauthenticated FAILED [  6%]\ntests/integration/test_news_api.py::TestNewsAPI::test_retrieve_news PASSED [  9%]\ntests/integration/test_news_api.py::TestNewsAPI::test_create_news FAILED [ 12%]\ntests/integration/test_news_api.py::TestNewsAPI::test_update_news PASSED [ 15%]\ntests/integration/test_news_api.py::TestNewsAPI::test_filter_news_by_category ERROR [ 18%]\ntests/integration/test_news_api.py::TestNewsAPI::test_search_news ERROR  [ 21%]\ntests/integration/test_news_api.py::TestNewsAPI::test_mark_news_urgent PASSED [ 25%]\ntests/integration/test_news_api.py::TestNewsAPI::test_share_news PASSED  [ 28%]\ntests/integration/test_news_api.py::TestNewsAPI::test_get_related_news ERROR [ 31%]\ntests/integration/test_news_api.py::TestNewsAPI::test_advanced_search ERROR [ 34%]\ntests/integration/test_news_api.py::TestCategoryAPI::test_list_categories FAILED [ 37%]\ntests/integration/test_news_api.py::TestCategoryAPI::test_create_category PASSED [ 40%]\ntests/integration/test_news_api.py::TestCategoryAPI::test_category_statistics PASSED [ 43%]\ntests/integration/test_news_api.py::TestTagAPI::test_list_tags PASSED    [ 46%]\ntests/integration/test_news_api.py::TestTagAPI::test_create_tag PASSED   [ 50%]\ntests/integration/test_news_api.py::TestNewsPermissions::test_unauthenticated_access_denied FAILED [ 53%]\ntests/integration/test_news_api.py::TestNewsPermissions::test_read_only_access_for_regular_users PASSED [ 56%]\ntests/integration/test_webhook_integration.py::TestWebhookEndpoints::test_webhook_source_crud PASSED [ 59%]\ntests/integration/test_webhook_integration.py::TestWebhookEndpoints::test_webhook_statistics PASSED [ 62%]\ntests/integration/test_webhook_integration.py::TestWebhookEndpoints::test_webhook_test_endpoint PASSED [ 65%]\ntests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_receive_valid_webhook FAILED [ 68%]\ntests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_receive_webhook_invalid_json FAILED [ 71%]\ntests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_receive_webhook_missing_required_fields FAILED [ 75%]\ntests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_webhook_signature_verification FAILED [ 78%]\ntests/integration/test_webhook_integration.py::TestWebhookDashboard::test_webhook_dashboard FAILED [ 81%]\ntests/integration/test_webhook_integration.py::TestWebhookProcessing::test_webhook_processing_task_triggered FAILED [ 84%]\ntests/integration/test_webhook_integration.py::TestWebhookProcessing::test_webhook_log_creation FAILED [ 87%]\ntests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_receive_webhook_invalid_source FAILED [ 90%]\ntests/integration/test_webhook_integration.py::TestWhatsAppWebhook::test_whatsapp_webhook_verification FAILED [ 93%]\ntests/integration/test_webhook_integration.py::TestWhatsAppWebhook::test_whatsapp_webhook_verification_invalid_token PASSED [ 96%]\ntests/integration/test_webhook_integration.py::TestWhatsAppWebhook::test_whatsapp_webhook_message_receive FAILED [100%]\n\n==================================== ERRORS ====================================\n__________ ERROR at setup of TestNewsAPI.test_filter_news_by_category __________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x704dbdff6650>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('9a38e562-98e2-4ffa-be54-27ab9bf7e586'), datetime.datetime(2025, 7, 12, 0, 50, 30, 956074, tzinfo=datetime.timez...is is test news article number 2 with unique content.', 'This is test news article number 2 with unique content.', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x704dbdff6650>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\n\n    @pytest.fixture\n    def multiple_news(db, category, subcategory):\n        \"\"\"Create multiple news articles for bulk testing.\"\"\"\n        news_items = []\n    \n        for i in range(5):\n>           news_item = News.objects.create(\n                title=f'Test News Article {i+1}',\n                content=f'This is test news article number {i+1} with unique content.',\n                source=f'Test Source {i+1}',\n                author=f'Test Author {i+1}',\n                category=category,\n                subcategory=subcategory if i % 2 == 0 else None,\n                published_at=timezone.now() - timedelta(days=i),\n                is_published=True,\n                is_urgent=i == 0  # First one is urgent\n            )\n\ntests/conftest.py:219: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:173: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x704dbdff6650>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('9a38e562-98e2-4ffa-be54-27ab9bf7e586'), datetime.datetime(2025, 7, 12, 0, 50, 30, 956074, tzinfo=datetime.timez...is is test news article number 2 with unique content.', 'This is test news article number 2 with unique content.', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x704dbdff6650>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n________________ ERROR at setup of TestNewsAPI.test_search_news ________________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x704dbdb637d0>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('a2a52b66-f4b5-4f1f-8ce2-5ea8e5154c8c'), datetime.datetime(2025, 7, 12, 0, 50, 31, 366776, tzinfo=datetime.timez...is is test news article number 2 with unique content.', 'This is test news article number 2 with unique content.', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x704dbdb637d0>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\n\n    @pytest.fixture\n    def multiple_news(db, category, subcategory):\n        \"\"\"Create multiple news articles for bulk testing.\"\"\"\n        news_items = []\n    \n        for i in range(5):\n>           news_item = News.objects.create(\n                title=f'Test News Article {i+1}',\n                content=f'This is test news article number {i+1} with unique content.',\n                source=f'Test Source {i+1}',\n                author=f'Test Author {i+1}',\n                category=category,\n                subcategory=subcategory if i % 2 == 0 else None,\n                published_at=timezone.now() - timedelta(days=i),\n                is_published=True,\n                is_urgent=i == 0  # First one is urgent\n            )\n\ntests/conftest.py:219: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:173: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x704dbdb637d0>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('a2a52b66-f4b5-4f1f-8ce2-5ea8e5154c8c'), datetime.datetime(2025, 7, 12, 0, 50, 31, 366776, tzinfo=datetime.timez...is is test news article number 2 with unique content.', 'This is test news article number 2 with unique content.', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x704dbdb637d0>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n_____________ ERROR at setup of TestNewsAPI.test_get_related_news ______________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x704dbe073e90>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('408d2c05-95c8-45e5-af06-93a143ec030f'), datetime.datetime(2025, 7, 12, 0, 50, 32, 330479, tzinfo=datetime.timez...is is test news article number 2 with unique content.', 'This is test news article number 2 with unique content.', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x704dbe073e90>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\n\n    @pytest.fixture\n    def multiple_news(db, category, subcategory):\n        \"\"\"Create multiple news articles for bulk testing.\"\"\"\n        news_items = []\n    \n        for i in range(5):\n>           news_item = News.objects.create(\n                title=f'Test News Article {i+1}',\n                content=f'This is test news article number {i+1} with unique content.',\n                source=f'Test Source {i+1}',\n                author=f'Test Author {i+1}',\n                category=category,\n                subcategory=subcategory if i % 2 == 0 else None,\n                published_at=timezone.now() - timedelta(days=i),\n                is_published=True,\n                is_urgent=i == 0  # First one is urgent\n            )\n\ntests/conftest.py:219: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:173: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x704dbe073e90>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('408d2c05-95c8-45e5-af06-93a143ec030f'), datetime.datetime(2025, 7, 12, 0, 50, 32, 330479, tzinfo=datetime.timez...is is test news article number 2 with unique content.', 'This is test news article number 2 with unique content.', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x704dbe073e90>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n______________ ERROR at setup of TestNewsAPI.test_advanced_search ______________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x704dbd8f8850>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('5acd9e83-4a9d-4558-a861-9e1bccfd618e'), datetime.datetime(2025, 7, 12, 0, 50, 32, 790982, tzinfo=datetime.timez...is is test news article number 2 with unique content.', 'This is test news article number 2 with unique content.', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x704dbd8f8850>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\n\n    @pytest.fixture\n    def multiple_news(db, category, subcategory):\n        \"\"\"Create multiple news articles for bulk testing.\"\"\"\n        news_items = []\n    \n        for i in range(5):\n>           news_item = News.objects.create(\n                title=f'Test News Article {i+1}',\n                content=f'This is test news article number {i+1} with unique content.',\n                source=f'Test Source {i+1}',\n                author=f'Test Author {i+1}',\n                category=category,\n                subcategory=subcategory if i % 2 == 0 else None,\n                published_at=timezone.now() - timedelta(days=i),\n                is_published=True,\n                is_urgent=i == 0  # First one is urgent\n            )\n\ntests/conftest.py:219: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:173: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x704dbd8f8850>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('5acd9e83-4a9d-4558-a861-9e1bccfd618e'), datetime.datetime(2025, 7, 12, 0, 50, 32, 790982, tzinfo=datetime.timez...is is test news article number 2 with unique content.', 'This is test news article number 2 with unique content.', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x704dbd8f8850>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n=================================== FAILURES ===================================\n___________________ TestNewsAPI.test_list_news_authenticated ___________________\n\nself = <tests.integration.test_news_api.TestNewsAPI object at 0x704e033647d0>\nauthenticated_client = <rest_framework.test.APIClient object at 0x704e0377fdd0>\nnews = <News: Test News Article>\n\n    def test_list_news_authenticated(self, authenticated_client, news):\n        \"\"\"Test listing news with authentication.\"\"\"\n        url = reverse('news:news-list')\n        response = authenticated_client.get(url)\n    \n>       assert response.status_code == status.HTTP_200_OK\nE       assert 401 == 200\nE        +  where 401 = <Response status_code=401, \"application/json\">.status_code\nE        +  and   200 = status.HTTP_200_OK\n\ntests/integration/test_news_api.py:18: AssertionError\n---------------------------- Captured stderr setup -----------------------------\nWARNING NLTK stopwords not available, using default Portuguese stopwords\n------------------------------ Captured log setup ------------------------------\nWARNING  apps.classification.classifier:classifier.py:47 NLTK stopwords not available, using default Portuguese stopwords\n----------------------------- Captured stderr call -----------------------------\nINFO Request started - GET /api/v1/news/articles/\nINFO Request completed - GET /api/v1/news/articles/ - 401\nWARNING Unauthorized: /api/v1/news/articles/\n__________________ TestNewsAPI.test_list_news_unauthenticated __________________\n\nself = <tests.integration.test_news_api.TestNewsAPI object at 0x704e03364fd0>\napi_client = <rest_framework.test.APIClient object at 0x704e03bebed0>\nnews = <News: Test News Article>\n\n    def test_list_news_unauthenticated(self, api_client, news):\n        \"\"\"Test listing news without authentication.\"\"\"\n        url = reverse('news:news-list')\n        response = api_client.get(url)\n    \n>       assert response.status_code == status.HTTP_401_UNAUTHORIZED\nE       assert 200 == 401\nE        +  where 200 = <Response status_code=200, \"application/json\">.status_code\nE        +  and   401 = status.HTTP_401_UNAUTHORIZED\n\ntests/integration/test_news_api.py:32: AssertionError\n----------------------------- Captured stderr call -----------------------------\nINFO Request started - GET /api/v1/news/articles/\nINFO Request completed - GET /api/v1/news/articles/ - 200\n_________________________ TestNewsAPI.test_create_news _________________________\n\nself = <tests.integration.test_news_api.TestNewsAPI object at 0x704e03365550>\nauthenticated_client = <rest_framework.test.APIClient object at 0x704e03721e50>\ncategory = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\n\n    def test_create_news(self, authenticated_client, category, subcategory):\n        \"\"\"Test creating news via API.\"\"\"\n        url = reverse('news:news-list')\n        data = {\n            'title': 'API Created News',\n            'content': 'This news was created via API with sufficient content length.',\n            'source': 'API Test',\n            'author': 'Test Author',\n            'category': str(category.id),\n            'subcategory': str(subcategory.id),\n            'tag_names': ['api', 'test'],\n            'is_published': True\n        }\n    \n        response = authenticated_client.post(url, data)\n    \n        assert response.status_code == status.HTTP_201_CREATED\n        assert response.data['title'] == 'API Created News'\n>       assert response.data['category'] == str(category.id)\nE       AssertionError: assert UUID('78e0f353-4813-4d69-8c95-c4d2b8061d44') == '78e0f353-4813-4d69-8c95-c4d2b8061d44'\nE        +  where '78e0f353-4813-4d69-8c95-c4d2b8061d44' = str(UUID('78e0f353-4813-4d69-8c95-c4d2b8061d44'))\nE        +    where UUID('78e0f353-4813-4d69-8c95-c4d2b8061d44') = <Category: Test Category>.id\n\ntests/integration/test_news_api.py:63: AssertionError\n----------------------------- Captured stderr call -----------------------------\nINFO Request started - POST /api/v1/news/articles/\nINFO Request completed - POST /api/v1/news/articles/ - 201\n_____________________ TestCategoryAPI.test_list_categories _____________________\n\nself = <tests.integration.test_news_api.TestCategoryAPI object at 0x704e03376150>\nauthenticated_client = <rest_framework.test.APIClient object at 0x704dbd5211d0>\ncategory = <Category: Test Category>\n\n    def test_list_categories(self, authenticated_client, category):\n        \"\"\"Test listing categories.\"\"\"\n        url = reverse('news:category-list')\n        response = authenticated_client.get(url)\n    \n        assert response.status_code == status.HTTP_200_OK\n        assert len(response.data) >= 1\n    \n>       category_data = response.data[0]\nE       KeyError: 0\n\ntests/integration/test_news_api.py:163: KeyError\n----------------------------- Captured stderr call -----------------------------\nINFO Request started - GET /api/v1/news/categories/\nINFO Request completed - GET /api/v1/news/categories/ - 200\n____________ TestNewsPermissions.test_unauthenticated_access_denied ____________\n\nself = <tests.integration.test_news_api.TestNewsPermissions object at 0x704e03376c90>\napi_client = <rest_framework.test.APIClient object at 0x704dbd4ff490>\nnews = <News: Test News Article>\n\n    def test_unauthenticated_access_denied(self, api_client, news):\n        \"\"\"Test that unauthenticated users can't access news API.\"\"\"\n        urls = [\n            reverse('news:news-list'),\n            reverse('news:news-detail', kwargs={'pk': news.id}),\n            reverse('news:category-list'),\n            reverse('news:tag-list'),\n        ]\n    \n        for url in urls:\n            response = api_client.get(url)\n>           assert response.status_code == status.HTTP_401_UNAUTHORIZED\nE           assert 200 == 401\nE            +  where 200 = <Response status_code=200, \"application/json\">.status_code\nE            +  and   401 = status.HTTP_401_UNAUTHORIZED\n\ntests/integration/test_news_api.py:237: AssertionError\n----------------------------- Captured stderr call -----------------------------\nINFO Request started - GET /api/v1/news/articles/\nINFO Request completed - GET /api/v1/news/articles/ - 200\n______________ TestNewsWebhookReceiver.test_receive_valid_webhook ______________\n\nself = <tests.integration.test_webhook_integration.TestNewsWebhookReceiver object at 0x704e03755fd0>\napi_client = <rest_framework.test.APIClient object at 0x704dbdef9850>\nwebhook_source = <WebhookSource: Test Webhook Source>\nsample_webhook_data = {'author': 'Webhook Author', 'category_hint': 'test category', 'content': 'This is sample news content received via webhook. It contains enough text to be processed properly.', 'external_id': 'f31450ca-9acb-4b2d-aa78-8e58399cc8a8', ...}\nmock_celery = None\n\n    def test_receive_valid_webhook(self, api_client, webhook_source, sample_webhook_data, mock_celery):\n        \"\"\"Test receiving a valid webhook.\"\"\"\n        url = reverse('webhooks:news_webhook', kwargs={'source_name': webhook_source.name})\n    \n        response = api_client.post(\n            url,\n            data=json.dumps(sample_webhook_data),\n            content_type='application/json'\n        )\n    \n>       assert response.status_code == status.HTTP_200_OK\nE       assert 401 == 200\nE        +  where 401 = <JsonResponse status_code=401, \"application/json\">.status_code\nE        +  and   200 = status.HTTP_200_OK\n\ntests/integration/test_webhook_integration.py:86: AssertionError\n---------------------------- Captured stderr setup -----------------------------\nINFO Webhook source created: Test Webhook Source\n------------------------------ Captured log setup ------------------------------\nINFO     apps.webhooks.signals:signals.py:24 Webhook source created: Test Webhook Source\n----------------------------- Captured stderr call -----------------------------\nINFO Request started - POST /api/v1/webhooks/receive/Test Webhook Source/\nINFO Request completed - POST /api/v1/webhooks/receive/Test Webhook Source/ - 401\nWARNING Unauthorized: /api/v1/webhooks/receive/Test Webhook Source/\n__________ TestNewsWebhookReceiver.test_receive_webhook_invalid_json ___________\n\nself = <tests.integration.test_webhook_integration.TestNewsWebhookReceiver object at 0x704e03777150>\napi_client = <rest_framework.test.APIClient object at 0x704dbdceaed0>\nwebhook_source = <WebhookSource: Test Webhook Source>\n\n    def test_receive_webhook_invalid_json(self, api_client, webhook_source):\n        \"\"\"Test receiving webhook with invalid JSON.\"\"\"\n        url = reverse('webhooks:news_webhook', kwargs={'source_name': webhook_source.name})\n    \n        response = api_client.post(\n            url,\n            data='invalid json',\n            content_type='application/json'\n        )\n    \n>       assert response.status_code == status.HTTP_400_BAD_REQUEST\nE       assert 401 == 400\nE        +  where 401 = <JsonResponse status_code=401, \"application/json\">.status_code\nE        +  and   400 = status.HTTP_400_BAD_REQUEST\n\ntests/integration/test_webhook_integration.py:115: AssertionError\n---------------------------- Captured stderr setup -----------------------------\nINFO Webhook source created: Test Webhook Source\n------------------------------ Captured log setup ------------------------------\nINFO     apps.webhooks.signals:signals.py:24 Webhook source created: Test Webhook Source\n----------------------------- Captured stderr call -----------------------------\nINFO Request started - POST /api/v1/webhooks/receive/Test Webhook Source/\nINFO Request completed - POST /api/v1/webhooks/receive/Test Webhook Source/ - 401\nWARNING Unauthorized: /api/v1/webhooks/receive/Test Webhook Source/\n_____ TestNewsWebhookReceiver.test_receive_webhook_missing_required_fields _____\n\nself = <tests.integration.test_webhook_integration.TestNewsWebhookReceiver object at 0x704e03777510>\napi_client = <rest_framework.test.APIClient object at 0x704dbdf61990>\nwebhook_source = <WebhookSource: Test Webhook Source>, mock_celery = None\n\n    def test_receive_webhook_missing_required_fields(self, api_client, webhook_source, mock_celery):\n        \"\"\"Test receiving webhook with missing required fields.\"\"\"\n        url = reverse('webhooks:news_webhook', kwargs={'source_name': webhook_source.name})\n    \n        invalid_data = {\n            'title': 'Test News',\n            # Missing content, source\n        }\n    \n        response = api_client.post(\n            url,\n            data=json.dumps(invalid_data),\n            content_type='application/json'\n        )\n    \n        # Should accept the webhook but validation will fail in processing\n>       assert response.status_code == status.HTTP_200_OK\nE       assert 401 == 200\nE        +  where 401 = <JsonResponse status_code=401, \"application/json\">.status_code\nE        +  and   200 = status.HTTP_200_OK\n\ntests/integration/test_webhook_integration.py:133: AssertionError\n---------------------------- Captured stderr setup -----------------------------\nINFO Webhook source created: Test Webhook Source\n------------------------------ Captured log setup ------------------------------\nINFO     apps.webhooks.signals:signals.py:24 Webhook source created: Test Webhook Source\n----------------------------- Captured stderr call -----------------------------\nINFO Request started - POST /api/v1/webhooks/receive/Test Webhook Source/\nINFO Request completed - POST /api/v1/webhooks/receive/Test Webhook Source/ - 401\nWARNING Unauthorized: /api/v1/webhooks/receive/Test Webhook Source/\n_________ TestNewsWebhookReceiver.test_webhook_signature_verification __________\n\nself = <tests.integration.test_webhook_integration.TestNewsWebhookReceiver object at 0x704e03774450>\nmock_verify = <MagicMock name='verify_webhook_signature' id='123479201470160'>\napi_client = <rest_framework.test.APIClient object at 0x704dbe00d190>\nwebhook_source = <WebhookSource: Test Webhook Source>\nsample_webhook_data = {'author': 'Webhook Author', 'category_hint': 'test category', 'content': 'This is sample news content received via webhook. It contains enough text to be processed properly.', 'external_id': '367f141a-c43f-46e0-976a-8ceb90e1e33c', ...}\n\n    @patch('apps.webhooks.utils.verify_webhook_signature')\n    def test_webhook_signature_verification(self, mock_verify, api_client, webhook_source, sample_webhook_data):\n        \"\"\"Test webhook signature verification.\"\"\"\n        webhook_source.requires_authentication = True\n        webhook_source.save()\n    \n        # Test with valid signature\n        mock_verify.return_value = True\n        url = reverse('webhooks:news_webhook', kwargs={'source_name': webhook_source.name})\n    \n        response = api_client.post(\n            url,\n            data=json.dumps(sample_webhook_data),\n            content_type='application/json',\n            HTTP_X_HUB_SIGNATURE_256='sha256=valid_signature'\n        )\n    \n>       assert response.status_code == status.HTTP_200_OK\nE       assert 401 == 200\nE        +  where 401 = <JsonResponse status_code=401, \"application/json\">.status_code\nE        +  and   200 = status.HTTP_200_OK\n\ntests/integration/test_webhook_integration.py:152: AssertionError\n---------------------------- Captured stderr setup -----------------------------\nINFO Webhook source created: Test Webhook Source\n------------------------------ Captured log setup ------------------------------\nINFO     apps.webhooks.signals:signals.py:24 Webhook source created: Test Webhook Source\n----------------------------- Captured stderr call -----------------------------\nINFO Webhook source updated: Test Webhook Source\nINFO Request started - POST /api/v1/webhooks/receive/Test Webhook Source/\nINFO Request completed - POST /api/v1/webhooks/receive/Test Webhook Source/ - 401\nWARNING Unauthorized: /api/v1/webhooks/receive/Test Webhook Source/\n------------------------------ Captured log call -------------------------------\nINFO     apps.webhooks.signals:signals.py:24 Webhook source updated: Test Webhook Source\n_________________ TestWebhookDashboard.test_webhook_dashboard __________________\n\nself = <tests.integration.test_webhook_integration.TestWebhookDashboard object at 0x704e03777d50>\nauthenticated_client = <rest_framework.test.APIClient object at 0x704dbe187950>\nwebhook_source = <WebhookSource: Test Webhook Source>\n\n    def test_webhook_dashboard(self, authenticated_client, webhook_source):\n        \"\"\"Test webhook dashboard endpoint.\"\"\"\n        url = reverse('webhooks:dashboard')\n>       response = authenticated_client.get(url)\n\ntests/integration/test_webhook_integration.py:245: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/rest_framework/test.py:289: in get\n    response = super().get(path, data=data, **extra)\n/usr/local/lib/python3.11/site-packages/rest_framework/test.py:206: in get\n    return self.generic('GET', path, **r)\n/usr/local/lib/python3.11/site-packages/rest_framework/test.py:234: in generic\n    return super().generic(\n/usr/local/lib/python3.11/site-packages/django/test/client.py:609: in generic\n    return self.request(**r)\n/usr/local/lib/python3.11/site-packages/rest_framework/test.py:286: in request\n    return super().request(**kwargs)\n/usr/local/lib/python3.11/site-packages/rest_framework/test.py:238: in request\n    request = super().request(**kwargs)\n/usr/local/lib/python3.11/site-packages/django/test/client.py:891: in request\n    self.check_exception(response)\n/usr/local/lib/python3.11/site-packages/django/test/client.py:738: in check_exception\n    raise exc_value\n/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py:55: in inner\n    response = get_response(request)\n/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py:197: in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py:56: in wrapper_view\n    return view_func(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/views/generic/base.py:104: in view\n    return self.dispatch(request, *args, **kwargs)\n/usr/local/lib/python3.11/site-packages/rest_framework/views.py:509: in dispatch\n    response = self.handle_exception(exc)\n/usr/local/lib/python3.11/site-packages/rest_framework/views.py:469: in handle_exception\n    self.raise_uncaught_exception(exc)\n/usr/local/lib/python3.11/site-packages/rest_framework/views.py:480: in raise_uncaught_exception\n    raise exc\n/usr/local/lib/python3.11/site-packages/rest_framework/views.py:506: in dispatch\n    response = handler(request, *args, **kwargs)\n/usr/local/lib/python3.11/site-packages/rest_framework/decorators.py:50: in handler\n    return func(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <rest_framework.request.Request: GET '/api/v1/webhooks/dashboard/'>\n\n    @api_view(['GET'])\n    @permission_classes([IsAuthenticated])\n    @extend_schema(\n        summary=\"Get webhook dashboard data\",\n        description=\"Get aggregated webhook statistics for dashboard display.\"\n    )\n    def webhook_dashboard(request):\n        \"\"\"\n        Get webhook dashboard data.\n        \"\"\"\n        # Get recent statistics\n        today = timezone.now().date()\n        week_ago = today - timezone.timedelta(days=7)\n    \n        # Overall statistics\n        total_sources = WebhookSource.objects.filter(is_active=True).count()\n        total_logs = WebhookLog.objects.filter(created_at__date__gte=week_ago).count()\n        success_rate = WebhookLog.objects.filter(\n            created_at__date__gte=week_ago,\n            status='success'\n        ).count() / max(total_logs, 1) * 100\n    \n        # Recent activity\n        recent_logs = WebhookLog.objects.filter(\n            created_at__date__gte=week_ago\n        ).order_by('-created_at')[:10]\n    \n        # Source statistics\n        source_stats = []\n        for source in WebhookSource.objects.filter(is_active=True):\n            stats = WebhookStatistic.objects.filter(\n                source=source,\n                date__gte=week_ago\n            ).aggregate(\n>               total_requests=models.Sum('total_requests'),\n                successful_requests=models.Sum('successful_requests'),\n                failed_requests=models.Sum('failed_requests')\n            )\nE           NameError: name 'models' is not defined\n\napps/webhooks/views.py:404: NameError\n---------------------------- Captured stderr setup -----------------------------\nINFO Webhook source created: Test Webhook Source\n------------------------------ Captured log setup ------------------------------\nINFO     apps.webhooks.signals:signals.py:24 Webhook source created: Test Webhook Source\n----------------------------- Captured stderr call -----------------------------\nINFO Request started - GET /api/v1/webhooks/dashboard/\nERROR Request failed - GET /api/v1/webhooks/dashboard/ - name 'models' is not defined\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py\", line 56, in wrapper_view\n    return view_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/views/generic/base.py\", line 104, in view\n    return self.dispatch(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/views.py\", line 469, in handle_exception\n    self.raise_uncaught_exception(exc)\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/views.py\", line 480, in raise_uncaught_exception\n    raise exc\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/decorators.py\", line 50, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/app/apps/webhooks/views.py\", line 404, in webhook_dashboard\n    total_requests=models.Sum('total_requests'),\n                   ^^^^^^\nNameError: name 'models' is not defined\nERROR Internal Server Error: /api/v1/webhooks/dashboard/\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py\", line 56, in wrapper_view\n    return view_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/views/generic/base.py\", line 104, in view\n    return self.dispatch(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/views.py\", line 469, in handle_exception\n    self.raise_uncaught_exception(exc)\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/views.py\", line 480, in raise_uncaught_exception\n    raise exc\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/decorators.py\", line 50, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/app/apps/webhooks/views.py\", line 404, in webhook_dashboard\n    total_requests=models.Sum('total_requests'),\n                   ^^^^^^\nNameError: name 'models' is not defined\nINFO Request completed - GET /api/v1/webhooks/dashboard/ - 500\n_________ TestWebhookProcessing.test_webhook_processing_task_triggered _________\n\nself = <tests.integration.test_webhook_integration.TestWebhookProcessing object at 0x704e0377dd10>\nmock_task = <MagicMock name='delay' id='123479200138896'>\napi_client = <rest_framework.test.APIClient object at 0x704dbddcb450>\nwebhook_source = <WebhookSource: Test Webhook Source>\nsample_webhook_data = {'author': 'Webhook Author', 'category_hint': 'test category', 'content': 'This is sample news content received via webhook. It contains enough text to be processed properly.', 'external_id': '369b8425-54ce-4a9c-8beb-364209e3d580', ...}\n\n    @patch('apps.webhooks.tasks.process_webhook_async.delay')\n    def test_webhook_processing_task_triggered(self, mock_task, api_client, webhook_source, sample_webhook_data):\n        \"\"\"Test that webhook processing task is triggered.\"\"\"\n        url = reverse('webhooks:news_webhook', kwargs={'source_name': webhook_source.name})\n    \n        response = api_client.post(\n            url,\n            data=json.dumps(sample_webhook_data),\n            content_type='application/json'\n        )\n    \n>       assert response.status_code == status.HTTP_200_OK\nE       assert 401 == 200\nE        +  where 401 = <JsonResponse status_code=401, \"application/json\">.status_code\nE        +  and   200 = status.HTTP_200_OK\n\ntests/integration/test_webhook_integration.py:273: AssertionError\n---------------------------- Captured stderr setup -----------------------------\nINFO Webhook source created: Test Webhook Source\n------------------------------ Captured log setup ------------------------------\nINFO     apps.webhooks.signals:signals.py:24 Webhook source created: Test Webhook Source\n----------------------------- Captured stderr call -----------------------------\nINFO Request started - POST /api/v1/webhooks/receive/Test Webhook Source/\nINFO Request completed - POST /api/v1/webhooks/receive/Test Webhook Source/ - 401\nWARNING Unauthorized: /api/v1/webhooks/receive/Test Webhook Source/\n_______________ TestWebhookProcessing.test_webhook_log_creation ________________\n\nself = <tests.integration.test_webhook_integration.TestWebhookProcessing object at 0x704e03722150>\napi_client = <rest_framework.test.APIClient object at 0x704dbdebe410>\nwebhook_source = <WebhookSource: Test Webhook Source>\nsample_webhook_data = {'author': 'Webhook Author', 'category_hint': 'test category', 'content': 'This is sample news content received via webhook. It contains enough text to be processed properly.', 'external_id': '83864a65-46e6-4d7e-a6ad-1f6fb9957b5c', ...}\nmock_celery = None\n\n    def test_webhook_log_creation(self, api_client, webhook_source, sample_webhook_data, mock_celery):\n        \"\"\"Test that webhook logs are created properly.\"\"\"\n        initial_log_count = WebhookLog.objects.count()\n    \n        url = reverse('webhooks:news_webhook', kwargs={'source_name': webhook_source.name})\n    \n        response = api_client.post(\n            url,\n            data=json.dumps(sample_webhook_data),\n            content_type='application/json'\n        )\n    \n>       assert response.status_code == status.HTTP_200_OK\nE       assert 401 == 200\nE        +  where 401 = <JsonResponse status_code=401, \"application/json\">.status_code\nE        +  and   200 = status.HTTP_200_OK\n\ntests/integration/test_webhook_integration.py:290: AssertionError\n---------------------------- Captured stderr setup -----------------------------\nINFO Webhook source created: Test Webhook Source\n------------------------------ Captured log setup ------------------------------\nINFO     apps.webhooks.signals:signals.py:24 Webhook source created: Test Webhook Source\n----------------------------- Captured stderr call -----------------------------\nINFO Request started - POST /api/v1/webhooks/receive/Test Webhook Source/\nINFO Request completed - POST /api/v1/webhooks/receive/Test Webhook Source/ - 401\nWARNING Unauthorized: /api/v1/webhooks/receive/Test Webhook Source/\n_________ TestNewsWebhookReceiver.test_receive_webhook_invalid_source __________\n\nself = <tests.integration.test_webhook_integration.TestNewsWebhookReceiver object at 0x704e03776a50>\napi_client = <rest_framework.test.APIClient object at 0x704dbddcbfd0>\nsample_webhook_data = {'author': 'Webhook Author', 'category_hint': 'test category', 'content': 'This is sample news content received via webhook. It contains enough text to be processed properly.', 'external_id': 'ef4b0f66-6214-4a6f-930e-391b584345ed', ...}\n\n    def test_receive_webhook_invalid_source(self, api_client, sample_webhook_data):\n        \"\"\"Test receiving webhook with invalid source.\"\"\"\n        url = reverse('webhooks:news_webhook', kwargs={'source_name': 'nonexistent'})\n    \n        response = api_client.post(\n            url,\n            data=json.dumps(sample_webhook_data),\n            content_type='application/json'\n        )\n    \n>       assert response.status_code == status.HTTP_404_NOT_FOUND\nE       assert 500 == 404\nE        +  where 500 = <JsonResponse status_code=500, \"application/json\">.status_code\nE        +  and   404 = status.HTTP_404_NOT_FOUND\n\ntests/integration/test_webhook_integration.py:103: AssertionError\n----------------------------- Captured stderr call -----------------------------\nINFO Request started - POST /api/v1/webhooks/receive/nonexistent/\nERROR Error processing webhook: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\nTraceback (most recent call last):\n  File \"/app/apps/webhooks/views.py\", line 219, in news_webhook\n    source = WebhookSource.objects.get(name=source_name, is_active=True)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 633, in get\n    num = len(clone)\n          ^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 380, in __len__\n    self._fetch_all()\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 1881, in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 91, in __iter__\n    results = compiler.execute_sql(\n              ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py\", line 1560, in execute_sql\n    cursor = self.connection.cursor()\n             ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/utils/asyncio.py\", line 26, in inner\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/base/base.py\", line 330, in cursor\n    return self._cursor()\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/base/base.py\", line 306, in _cursor\n    self.ensure_connection()\n  File \"/usr/local/lib/python3.11/site-packages/pytest_django/plugin.py\", line 798, in _blocking_wrapper\n    raise RuntimeError(\nRuntimeError: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\nINFO Request completed - POST /api/v1/webhooks/receive/nonexistent/ - 500\nERROR Internal Server Error: /api/v1/webhooks/receive/nonexistent/\n------------------------------ Captured log call -------------------------------\nERROR    apps.webhooks.views:views.py:290 Error processing webhook: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\nTraceback (most recent call last):\n  File \"/app/apps/webhooks/views.py\", line 219, in news_webhook\n    source = WebhookSource.objects.get(name=source_name, is_active=True)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 633, in get\n    num = len(clone)\n          ^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 380, in __len__\n    self._fetch_all()\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 1881, in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 91, in __iter__\n    results = compiler.execute_sql(\n              ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py\", line 1560, in execute_sql\n    cursor = self.connection.cursor()\n             ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/utils/asyncio.py\", line 26, in inner\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/base/base.py\", line 330, in cursor\n    return self._cursor()\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/base/base.py\", line 306, in _cursor\n    self.ensure_connection()\n  File \"/usr/local/lib/python3.11/site-packages/pytest_django/plugin.py\", line 798, in _blocking_wrapper\n    raise RuntimeError(\nRuntimeError: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\n____________ TestWhatsAppWebhook.test_whatsapp_webhook_verification ____________\n\nself = <tests.integration.test_webhook_integration.TestWhatsAppWebhook object at 0x704e03774b10>\napi_client = <rest_framework.test.APIClient object at 0x704dbdce75d0>\n\n    def test_whatsapp_webhook_verification(self, api_client):\n        \"\"\"Test WhatsApp webhook verification.\"\"\"\n        url = reverse('webhooks:whatsapp_webhook')\n    \n        params = {\n            'hub.mode': 'subscribe',\n            'hub.challenge': 'test_challenge_string',\n            'hub.verify_token': 'test_verify_token'\n        }\n    \n        response = api_client.get(url, params)\n    \n>       assert response.status_code == status.HTTP_200_OK\nE       assert 400 == 200\nE        +  where 400 = <HttpResponse status_code=400, \"text/html; charset=utf-8\">.status_code\nE        +  and   200 = status.HTTP_200_OK\n\ntests/integration/test_webhook_integration.py:183: AssertionError\n----------------------------- Captured stderr call -----------------------------\nINFO Request started - GET /api/v1/webhooks/whatsapp/\nINFO Request completed - GET /api/v1/webhooks/whatsapp/ - 400\nWARNING Bad Request: /api/v1/webhooks/whatsapp/\n__________ TestWhatsAppWebhook.test_whatsapp_webhook_message_receive ___________\n\nself = <tests.integration.test_webhook_integration.TestWhatsAppWebhook object at 0x704e03774f50>\napi_client = <rest_framework.test.APIClient object at 0x704dbe062790>\n\n    def test_whatsapp_webhook_message_receive(self, api_client):\n        \"\"\"Test receiving WhatsApp messages.\"\"\"\n        url = reverse('webhooks:whatsapp_webhook')\n    \n        whatsapp_data = {\n            'object': 'whatsapp_business_account',\n            'entry': [{\n                'id': 'entry_id',\n                'changes': [{\n                    'value': {\n                        'messaging_product': 'whatsapp',\n                        'metadata': {\n                            'phone_number_id': 'phone_id'\n                        },\n                        'messages': [{\n                            'id': 'message_id',\n                            'from': '5511999999999',\n                            'timestamp': '1234567890',\n                            'text': {\n                                'body': 'Hello from WhatsApp'\n                            },\n                            'type': 'text'\n                        }]\n                    },\n                    'field': 'messages'\n                }]\n            }]\n        }\n    \n        response = api_client.post(\n            url,\n            data=json.dumps(whatsapp_data),\n            content_type='application/json'\n        )\n    \n>       assert response.status_code == status.HTTP_200_OK\nE       assert 500 == 200\nE        +  where 500 = <JsonResponse status_code=500, \"application/json\">.status_code\nE        +  and   200 = status.HTTP_200_OK\n\ntests/integration/test_webhook_integration.py:235: AssertionError\n----------------------------- Captured stderr call -----------------------------\nINFO Request started - POST /api/v1/webhooks/whatsapp/\nERROR Error processing WhatsApp webhook: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\nTraceback (most recent call last):\n  File \"/app/apps/webhooks/views.py\", line 343, in whatsapp_webhook\n    source=WebhookSource.objects.get_or_create(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 916, in get_or_create\n    return self.get(**kwargs), False\n           ^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 633, in get\n    num = len(clone)\n          ^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 380, in __len__\n    self._fetch_all()\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 1881, in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 91, in __iter__\n    results = compiler.execute_sql(\n              ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py\", line 1560, in execute_sql\n    cursor = self.connection.cursor()\n             ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/utils/asyncio.py\", line 26, in inner\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/base/base.py\", line 330, in cursor\n    return self._cursor()\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/base/base.py\", line 306, in _cursor\n    self.ensure_connection()\n  File \"/usr/local/lib/python3.11/site-packages/pytest_django/plugin.py\", line 798, in _blocking_wrapper\n    raise RuntimeError(\nRuntimeError: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\nINFO Request completed - POST /api/v1/webhooks/whatsapp/ - 500\nERROR Internal Server Error: /api/v1/webhooks/whatsapp/\n------------------------------ Captured log call -------------------------------\nERROR    apps.webhooks.views:views.py:366 Error processing WhatsApp webhook: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\nTraceback (most recent call last):\n  File \"/app/apps/webhooks/views.py\", line 343, in whatsapp_webhook\n    source=WebhookSource.objects.get_or_create(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 916, in get_or_create\n    return self.get(**kwargs), False\n           ^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 633, in get\n    num = len(clone)\n          ^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 380, in __len__\n    self._fetch_all()\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 1881, in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 91, in __iter__\n    results = compiler.execute_sql(\n              ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py\", line 1560, in execute_sql\n    cursor = self.connection.cursor()\n             ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/utils/asyncio.py\", line 26, in inner\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/base/base.py\", line 330, in cursor\n    return self._cursor()\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/base/base.py\", line 306, in _cursor\n    self.ensure_connection()\n  File \"/usr/local/lib/python3.11/site-packages/pytest_django/plugin.py\", line 798, in _blocking_wrapper\n    raise RuntimeError(\nRuntimeError: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\n=============================== warnings summary ===============================\ntests/integration/test_news_api.py:9\n  /app/tests/integration/test_news_api.py:9: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\ntests/integration/test_news_api.py:151\n  /app/tests/integration/test_news_api.py:151: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\ntests/integration/test_news_api.py:195\n  /app/tests/integration/test_news_api.py:195: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\ntests/integration/test_news_api.py:222\n  /app/tests/integration/test_news_api.py:222: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\ntests/integration/test_webhook_integration.py:14\n  /app/tests/integration/test_webhook_integration.py:14: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\ntests/integration/test_webhook_integration.py:72\n  /app/tests/integration/test_webhook_integration.py:72: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\ntests/integration/test_webhook_integration.py:167\n  /app/tests/integration/test_webhook_integration.py:167: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\ntests/integration/test_webhook_integration.py:238\n  /app/tests/integration/test_webhook_integration.py:238: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\ntests/integration/test_webhook_integration.py:258\n  /app/tests/integration/test_webhook_integration.py:258: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/integration/test_news_api.py::TestNewsAPI::test_list_news_authenticated\nFAILED tests/integration/test_news_api.py::TestNewsAPI::test_list_news_unauthenticated\nFAILED tests/integration/test_news_api.py::TestNewsAPI::test_create_news - As...\nFAILED tests/integration/test_news_api.py::TestCategoryAPI::test_list_categories\nFAILED tests/integration/test_news_api.py::TestNewsPermissions::test_unauthenticated_access_denied\nFAILED tests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_receive_valid_webhook\nFAILED tests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_receive_webhook_invalid_json\nFAILED tests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_receive_webhook_missing_required_fields\nFAILED tests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_webhook_signature_verification\nFAILED tests/integration/test_webhook_integration.py::TestWebhookDashboard::test_webhook_dashboard\nFAILED tests/integration/test_webhook_integration.py::TestWebhookProcessing::test_webhook_processing_task_triggered\nFAILED tests/integration/test_webhook_integration.py::TestWebhookProcessing::test_webhook_log_creation\nFAILED tests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_receive_webhook_invalid_source\nFAILED tests/integration/test_webhook_integration.py::TestWhatsAppWebhook::test_whatsapp_webhook_verification\nFAILED tests/integration/test_webhook_integration.py::TestWhatsAppWebhook::test_whatsapp_webhook_message_receive\nERROR tests/integration/test_news_api.py::TestNewsAPI::test_filter_news_by_category\nERROR tests/integration/test_news_api.py::TestNewsAPI::test_search_news - dja...\nERROR tests/integration/test_news_api.py::TestNewsAPI::test_get_related_news\nERROR tests/integration/test_news_api.py::TestNewsAPI::test_advanced_search\n============= 15 failed, 13 passed, 9 warnings, 4 errors in 9.31s ==============\n"
    },
    "api__api_v1_news_categories_": {
      "status": "passed",
      "response_code": 200
    },
    "api__api_v1_news_tags_": {
      "status": "passed",
      "response_code": 200
    },
    "api__api_v1_news_articles_": {
      "status": "passed",
      "response_code": 200
    },
    "api__api_docs_": {
      "status": "passed",
      "response_code": 200
    },
    "api__metrics_": {
      "status": "failed",
      "response_code": 404
    },
    "api__celery_metrics_": {
      "status": "passed",
      "response_code": 200
    },
    "api__business_metrics_": {
      "status": "passed",
      "response_code": 200
    },
    "api__security_metrics_": {
      "status": "passed",
      "response_code": 200
    }
  },
  "demos": {
    "news_creation": {
      "status": "failed",
      "error": "time=\"2025-07-11T21:49:48-03:00\" level=warning msg=\"/mnt/c/Users/pablo/JOTA/jota-news-system/docker-compose.yml: `version` is obsolete\"\nWARNING NLTK stopwords not available, using default Portuguese stopwords\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 916, in get_or_create\n    return self.get(**kwargs), False\n           ^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 637, in get\n    raise self.model.DoesNotExist(\napps.news.models.Category.DoesNotExist: Category matching query does not exist.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py\", line 89, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_category_slug_key\"\nDETAIL:  Key (slug)=() already exists.\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/manage.py\", line 22, in <module>\n    main()\n  File \"/app/manage.py\", line 18, in main\n    execute_from_command_line(sys.argv)\n  File \"/usr/local/lib/python3.11/site-packages/django/core/management/__init__.py\", line 442, in execute_from_command_line\n    utility.execute()\n  File \"/usr/local/lib/python3.11/site-packages/django/core/management/__init__.py\", line 436, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/usr/local/lib/python3.11/site-packages/django/core/management/base.py\", line 412, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \"/usr/local/lib/python3.11/site-packages/django/core/management/base.py\", line 458, in execute\n    output = self.handle(*args, **options)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/app/apps/news/management/commands/create_sample_data.py\", line 42, in handle\n    categories_created = self.create_categories(options['categories'])\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/app/apps/news/management/commands/create_sample_data.py\", line 81, in create_categories\n    category, was_created = Category.objects.get_or_create(\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 923, in get_or_create\n    return self.create(**params), True\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 658, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/base.py\", line 814, in save\n    self.save_base(\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/base.py\", line 877, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/base.py\", line 1020, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/base.py\", line 1061, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 1805, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py\", line 1822, in execute_sql\n    cursor.execute(sql, params)\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py\", line 102, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py\", line 67, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py\", line 80, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py\", line 84, in _execute\n    with self.db.wrap_database_errors:\n  File \"/usr/local/lib/python3.11/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py\", line 89, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_category_slug_key\"\nDETAIL:  Key (slug)=() already exists.\n\n"
    },
    "classification": {
      "status": "passed"
    },
    "webhook_processing": {
      "status": "failed",
      "error": "HTTP 404"
    },
    "monitoring_metrics": {
      "status": "failed"
    }
  },
  "performance": {
    "/api/v1/news/articles/": {
      "avg_response_time": 0.027412962913513184,
      "max_response_time": 0.031439781188964844,
      "min_response_time": 0.02460312843322754,
      "requests_count": 10
    },
    "/api/v1/news/categories/": {
      "avg_response_time": 0.03420431613922119,
      "max_response_time": 0.03927731513977051,
      "min_response_time": 0.03180265426635742,
      "requests_count": 10
    },
    "/health/": {
      "avg_response_time": 0.004490852355957031,
      "max_response_time": 0.005497932434082031,
      "min_response_time": 0.004132270812988281,
      "requests_count": 10
    }
  },
  "health_checks": {
    "API Server": {
      "status": "healthy",
      "response_time": 0.004375
    },
    "Grafana": {
      "status": "healthy",
      "response_time": 0.002536
    },
    "Celery Monitoring": {
      "status": "healthy",
      "response_time": 1.009412
    },
    "Business Metrics": {
      "status": "healthy",
      "response_time": 0.003667
    },
    "Security Monitoring": {
      "status": "healthy",
      "response_time": 0.004239
    }
  },
  "monitoring": {
    "grafana": {
      "status": "available",
      "dashboard_count": 5,
      "dashboards": [
        {
          "id": 3,
          "uid": "celery-dashboard",
          "orgId": 1,
          "title": "Celery Task Monitoring",
          "uri": "db/celery-task-monitoring",
          "url": "/d/celery-dashboard/celery-task-monitoring",
          "slug": "",
          "type": "dash-db",
          "tags": [
            "celery",
            "monitoring",
            "tasks"
          ],
          "isStarred": false,
          "sortMeta": 0,
          "isDeleted": false
        },
        {
          "id": 2,
          "uid": "redis-dashboard",
          "orgId": 1,
          "title": "JOTA - Redis Dashboard",
          "uri": "db/jota-redis-dashboard",
          "url": "/d/redis-dashboard/jota-redis-dashboard",
          "slug": "",
          "type": "dash-db",
          "tags": [
            "cache",
            "jota",
            "redis"
          ],
          "isStarred": false,
          "sortMeta": 0,
          "isDeleted": false
        },
        {
          "id": 4,
          "uid": "business-dashboard",
          "orgId": 1,
          "title": "JOTA News - Business Metrics",
          "uri": "db/jota-news-business-metrics",
          "url": "/d/business-dashboard/jota-news-business-metrics",
          "slug": "",
          "type": "dash-db",
          "tags": [
            "business",
            "jota",
            "metrics",
            "news"
          ],
          "isStarred": false,
          "sortMeta": 0,
          "isDeleted": false
        },
        {
          "id": 5,
          "uid": "security-dashboard",
          "orgId": 1,
          "title": "JOTA News - Security Monitoring",
          "uri": "db/jota-news-security-monitoring",
          "url": "/d/security-dashboard/jota-news-security-monitoring",
          "slug": "",
          "type": "dash-db",
          "tags": [
            "auth",
            "jota",
            "monitoring",
            "security"
          ],
          "isStarred": false,
          "sortMeta": 0,
          "isDeleted": false
        },
        {
          "id": 1,
          "uid": "jota-news-complete",
          "orgId": 1,
          "title": "JOTA News System - Complete Dashboard",
          "uri": "db/jota-news-system-complete-dashboard",
          "url": "/d/jota-news-complete/jota-news-system-complete-dashboard",
          "slug": "",
          "type": "dash-db",
          "tags": [
            "jota",
            "monitoring",
            "news"
          ],
          "isStarred": false,
          "sortMeta": 0,
          "isDeleted": false
        }
      ]
    }
  },
  "summary": {
    "total_tests": 10,
    "passed_tests": 7,
    "failed_tests": 3,
    "success_rate": 70.0,
    "execution_time": "2025-07-11T21:50:45.484943"
  }
}