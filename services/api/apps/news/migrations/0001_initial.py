# Generated by Django 4.2.7 on 2025-07-09 18:58

import django.contrib.postgres.fields
import django.contrib.postgres.indexes
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        # Enable pg_trgm extension for trigram searches
        migrations.RunSQL(
            sql="CREATE EXTENSION IF NOT EXISTS pg_trgm;",
            reverse_sql="DROP EXTENSION IF EXISTS pg_trgm;",
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "keywords",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=50),
                        blank=True,
                        default=list,
                        help_text="Keywords for automatic classification",
                        size=None,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
                "db_table": "news_category",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="News",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "title",
                    models.CharField(
                        max_length=200,
                        validators=[django.core.validators.MaxLengthValidator(200)],
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        validators=[django.core.validators.MaxLengthValidator(10000)]
                    ),
                ),
                ("summary", models.TextField(blank=True, max_length=500)),
                ("source", models.CharField(max_length=200)),
                ("source_url", models.URLField(blank=True)),
                ("author", models.CharField(blank=True, max_length=200)),
                (
                    "published_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "external_id",
                    models.CharField(blank=True, max_length=200, unique=True),
                ),
                ("is_urgent", models.BooleanField(default=False)),
                ("is_published", models.BooleanField(default=True)),
                ("is_processed", models.BooleanField(default=False)),
                ("category_confidence", models.FloatField(default=0.0)),
                ("subcategory_confidence", models.FloatField(default=0.0)),
                ("urgency_confidence", models.FloatField(default=0.0)),
                ("word_count", models.PositiveIntegerField(default=0)),
                ("reading_time", models.PositiveIntegerField(default=0)),
                ("view_count", models.PositiveIntegerField(default=0)),
                ("share_count", models.PositiveIntegerField(default=0)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="news",
                        to="news.category",
                    ),
                ),
            ],
            options={
                "verbose_name": "News",
                "verbose_name_plural": "News",
                "db_table": "news_news",
                "ordering": ["-published_at"],
            },
        ),
        migrations.CreateModel(
            name="NewsStatistic",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("date", models.DateField(unique=True)),
                ("total_news", models.PositiveIntegerField(default=0)),
                ("urgent_news", models.PositiveIntegerField(default=0)),
                ("categories_count", models.JSONField(default=dict)),
                ("sources_count", models.JSONField(default=dict)),
                ("avg_processing_time", models.FloatField(default=0.0)),
            ],
            options={
                "verbose_name": "News Statistic",
                "verbose_name_plural": "News Statistics",
                "db_table": "news_statistic",
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=50, unique=True)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField(blank=True)),
                ("usage_count", models.PositiveIntegerField(default=0)),
            ],
            options={
                "verbose_name": "Tag",
                "verbose_name_plural": "Tags",
                "db_table": "news_tag",
                "ordering": ["-usage_count", "name"],
            },
        ),
        migrations.CreateModel(
            name="Subcategory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "keywords",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=50),
                        blank=True,
                        default=list,
                        help_text="Keywords for automatic classification",
                        size=None,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategories",
                        to="news.category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Subcategory",
                "verbose_name_plural": "Subcategories",
                "db_table": "news_subcategory",
                "ordering": ["category__name", "name"],
                "unique_together": {("category", "slug")},
            },
        ),
        migrations.CreateModel(
            name="NewsProcessingLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("stage", models.CharField(max_length=50)),
                ("status", models.CharField(max_length=20)),
                ("message", models.TextField(blank=True)),
                ("processing_time", models.FloatField(default=0.0)),
                (
                    "news",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="processing_logs",
                        to="news.news",
                    ),
                ),
            ],
            options={
                "verbose_name": "Processing Log",
                "verbose_name_plural": "Processing Logs",
                "db_table": "news_processing_log",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="news",
            name="subcategory",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="news",
                to="news.subcategory",
            ),
        ),
        migrations.AddField(
            model_name="news",
            name="tags",
            field=models.ManyToManyField(
                blank=True, related_name="news", to="news.tag"
            ),
        ),
        migrations.AddIndex(
            model_name="news",
            index=models.Index(
                fields=["category", "-published_at"],
                name="news_news_categor_5d2cdf_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="news",
            index=models.Index(
                fields=["subcategory", "-published_at"],
                name="news_news_subcate_8eab0c_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="news",
            index=models.Index(
                fields=["is_urgent", "-published_at"],
                name="news_news_is_urge_422fd6_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="news",
            index=models.Index(
                fields=["is_published", "-published_at"],
                name="news_news_is_publ_dcad2b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="news",
            index=models.Index(
                fields=["source", "-published_at"], name="news_news_source_3efba3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="news",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["title", "content"], 
                name="news_news_title_ad75b1_gin",
                opclasses=["gin_trgm_ops", "gin_trgm_ops"]
            ),
        ),
    ]