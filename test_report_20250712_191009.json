{
  "timestamp": "2025-07-12T19:09:20.361827",
  "tests": {
    "unit": {
      "status": "passed",
      "output": "============================= test session starts ==============================\nplatform linux -- Python 3.11.13, pytest-7.4.3, pluggy-1.6.0 -- /usr/local/bin/python3.11\ncachedir: .pytest_cache\ndjango: version: 4.2.7\nrootdir: /app\nconfigfile: pytest.ini\nplugins: Faker-37.4.0, cov-4.1.0, django-4.7.0, anyio-4.9.0\ncollecting ... collected 37 items\n\ntests/unit/test_classification_models.py::TestClassificationRule::test_create_classification_rule PASSED [  2%]\ntests/unit/test_classification_models.py::TestClassificationRule::test_rule_increment_matches PASSED [  5%]\ntests/unit/test_classification_models.py::TestClassificationRule::test_rule_increment_successful_classifications PASSED [  8%]\ntests/unit/test_classification_models.py::TestClassificationRule::test_rule_success_rate_calculation PASSED [ 10%]\ntests/unit/test_classification_models.py::TestClassificationRule::test_rule_unique_name PASSED [ 13%]\ntests/unit/test_classification_models.py::TestClassificationModel::test_create_classification_model PASSED [ 16%]\ntests/unit/test_classification_models.py::TestClassificationModel::test_model_increment_predictions PASSED [ 18%]\ntests/unit/test_classification_models.py::TestClassificationResult::test_create_classification_result PASSED [ 21%]\ntests/unit/test_classification_models.py::TestClassificationResult::test_accept_classification PASSED [ 24%]\ntests/unit/test_classification_models.py::TestClassificationTrainingData::test_create_training_data PASSED [ 27%]\ntests/unit/test_classification_models.py::TestClassificationStatistic::test_create_classification_statistic PASSED [ 29%]\ntests/unit/test_classification_models.py::TestClassificationStatistic::test_statistic_success_rate_calculation PASSED [ 32%]\ntests/unit/test_news_models.py::TestCategoryModel::test_create_category PASSED [ 35%]\ntests/unit/test_news_models.py::TestCategoryModel::test_category_unique_name PASSED [ 37%]\ntests/unit/test_news_models.py::TestCategoryModel::test_category_unique_slug PASSED [ 40%]\ntests/unit/test_news_models.py::TestSubcategoryModel::test_create_subcategory PASSED [ 43%]\ntests/unit/test_news_models.py::TestSubcategoryModel::test_subcategory_category_slug_unique_together PASSED [ 45%]\ntests/unit/test_news_models.py::TestTagModel::test_create_tag PASSED     [ 48%]\ntests/unit/test_news_models.py::TestTagModel::test_tag_unique_name PASSED [ 51%]\ntests/unit/test_news_models.py::TestNewsModel::test_create_news PASSED   [ 54%]\ntests/unit/test_news_models.py::TestNewsModel::test_news_auto_word_count PASSED [ 56%]\ntests/unit/test_news_models.py::TestNewsModel::test_news_auto_reading_time PASSED [ 59%]\ntests/unit/test_news_models.py::TestNewsModel::test_news_auto_summary_generation PASSED [ 62%]\ntests/unit/test_news_models.py::TestNewsModel::test_news_increment_view_count PASSED [ 64%]\ntests/unit/test_news_models.py::TestNewsModel::test_news_increment_share_count PASSED [ 67%]\ntests/unit/test_news_models.py::TestNewsModel::test_news_external_id_unique PASSED [ 70%]\ntests/unit/test_news_models.py::TestNewsProcessingLog::test_create_processing_log PASSED [ 72%]\ntests/unit/test_news_serializers.py::TestCategorySerializer::test_serialize_category PASSED [ 75%]\ntests/unit/test_news_serializers.py::TestCategorySerializer::test_deserialize_category PASSED [ 78%]\ntests/unit/test_news_serializers.py::TestSubcategorySerializer::test_serialize_subcategory PASSED [ 81%]\ntests/unit/test_news_serializers.py::TestTagSerializer::test_serialize_tag PASSED [ 83%]\ntests/unit/test_news_serializers.py::TestNewsSerializers::test_news_list_serializer PASSED [ 86%]\ntests/unit/test_news_serializers.py::TestNewsSerializers::test_news_detail_serializer PASSED [ 89%]\ntests/unit/test_news_serializers.py::TestNewsSerializers::test_news_create_serializer PASSED [ 91%]\ntests/unit/test_news_serializers.py::TestNewsSerializers::test_news_update_serializer PASSED [ 94%]\ntests/unit/test_news_serializers.py::TestNewsSerializers::test_news_create_serializer_validation PASSED [ 97%]\ntests/unit/test_news_serializers.py::TestNewsSerializers::test_news_create_with_duplicate_external_id PASSED [100%]\n\n=============================== warnings summary ===============================\ntests/unit/test_classification_models.py:14\n  /app/tests/unit/test_classification_models.py:14: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_classification_models.py:80\n  /app/tests/unit/test_classification_models.py:80: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_classification_models.py:119\n  /app/tests/unit/test_classification_models.py:119: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_classification_models.py:172\n  /app/tests/unit/test_classification_models.py:172: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_classification_models.py:196\n  /app/tests/unit/test_classification_models.py:196: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_models.py:13\n  /app/tests/unit/test_news_models.py:13: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_models.py:53\n  /app/tests/unit/test_news_models.py:53: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_models.py:88\n  /app/tests/unit/test_news_models.py:88: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_models.py:114\n  /app/tests/unit/test_news_models.py:114: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_models.py:213\n  /app/tests/unit/test_news_models.py:213: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_serializers.py:15\n  /app/tests/unit/test_news_serializers.py:15: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_serializers.py:50\n  /app/tests/unit/test_news_serializers.py:50: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_serializers.py:65\n  /app/tests/unit/test_news_serializers.py:65: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_serializers.py:79\n  /app/tests/unit/test_news_serializers.py:79: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n\n---------- coverage: platform linux, python 3.11.13-final-0 ----------\nName                                                                           Stmts   Miss  Cover\n--------------------------------------------------------------------------------------------------\napps/__init__.py                                                                   0      0   100%\napps/authentication/__init__.py                                                    0      0   100%\napps/authentication/admin.py                                                      34      4    88%\napps/authentication/apps.py                                                       10      0   100%\napps/authentication/backends.py                                                   24     24     0%\napps/authentication/drf_authentication.py                                         38     38     0%\napps/authentication/migrations/0001_initial.py                                    11     11     0%\napps/authentication/migrations/__init__.py                                         0      0   100%\napps/authentication/models.py                                                     63      7    89%\napps/authentication/serializers.py                                                97     97     0%\napps/authentication/urls.py                                                       19     19     0%\napps/authentication/views.py                                                     104    104     0%\napps/classification/__init__.py                                                    0      0   100%\napps/classification/admin.py                                                     144     63    56%\napps/classification/apps.py                                                        7      0   100%\napps/classification/classifier.py                                                225    166    26%\napps/classification/migrations/0001_initial.py                                     8      8     0%\napps/classification/migrations/__init__.py                                         0      0   100%\napps/classification/models.py                                                    162      1    99%\napps/classification/serializers.py                                                87     87     0%\napps/classification/signals.py                                                    38      6    84%\napps/classification/tasks.py                                                     168    146    13%\napps/classification/urls.py                                                       12     12     0%\napps/classification/views.py                                                     168    168     0%\napps/demo/__init__.py                                                              0      0   100%\napps/demo/apps.py                                                                  5      0   100%\napps/demo/urls.py                                                                  4      4     0%\napps/demo/views.py                                                               167    167     0%\napps/news/__init__.py                                                              0      0   100%\napps/news/admin.py                                                                91     20    78%\napps/news/apps.py                                                                  7      0   100%\napps/news/filters.py                                                              62     62     0%\napps/news/management/__init__.py                                                   0      0   100%\napps/news/management/commands/__init__.py                                          0      0   100%\napps/news/management/commands/create_sample_data.py                               78     78     0%\napps/news/migrations/0001_initial.py                                              11     11     0%\napps/news/migrations/0002_remove_news_news_news_title_ad75b1_gin_and_more.py       5      5     0%\napps/news/migrations/0003_fix_external_id_constraint.py                            4      4     0%\napps/news/migrations/__init__.py                                                   0      0   100%\napps/news/models.py                                                              130      3    98%\napps/news/pagination.py                                                           15     15     0%\napps/news/serializers.py                                                          92      0   100%\napps/news/signals.py                                                              39      3    92%\napps/news/tasks.py                                                                93     93     0%\napps/news/urls.py                                                                 12     12     0%\napps/news/views.py                                                               149    149     0%\napps/notifications/__init__.py                                                     0      0   100%\napps/notifications/admin.py                                                      141     56    60%\napps/notifications/apps.py                                                         7      0   100%\napps/notifications/migrations/0001_initial.py                                      9      9     0%\napps/notifications/migrations/__init__.py                                          0      0   100%\napps/notifications/models.py                                                     202     64    68%\napps/notifications/providers.py                                                  140    106    24%\napps/notifications/serializers.py                                                129    129     0%\napps/notifications/signals.py                                                     37     25    32%\napps/notifications/tasks.py                                                      194    171    12%\napps/notifications/urls.py                                                        12     12     0%\napps/notifications/views.py                                                      211    211     0%\napps/webhooks/__init__.py                                                          0      0   100%\napps/webhooks/admin.py                                                           105     40    62%\napps/webhooks/apps.py                                                              7      0   100%\napps/webhooks/migrations/0001_initial.py                                           7      7     0%\napps/webhooks/migrations/__init__.py                                               0      0   100%\napps/webhooks/models.py                                                          124     30    76%\napps/webhooks/serializers.py                                                      81     81     0%\napps/webhooks/signals.py                                                          28     18    36%\napps/webhooks/tasks.py                                                           151    151     0%\napps/webhooks/urls.py                                                              9      9     0%\napps/webhooks/utils.py                                                           121    121     0%\napps/webhooks/views.py                                                           142    142     0%\n--------------------------------------------------------------------------------------------------\nTOTAL                                                                           4240   2969    30%\nCoverage JSON written to file coverage.json\n\n======================= 37 passed, 14 warnings in 13.44s =======================\n"
    },
    "integration": {
      "status": "failed",
      "error": "time=\"2025-07-12T19:09:38-03:00\" level=warning msg=\"/mnt/c/Users/pablo/JOTA/jota-news-system/docker-compose.yml: `version` is obsolete\"\n",
      "output": "============================= test session starts ==============================\nplatform linux -- Python 3.11.13, pytest-7.4.3, pluggy-1.6.0 -- /usr/local/bin/python3.11\ncachedir: .pytest_cache\ndjango: version: 4.2.7\nrootdir: /app\nconfigfile: pytest.ini\nplugins: Faker-37.4.0, cov-4.1.0, django-4.7.0, anyio-4.9.0\ncollecting ... collected 32 items\n\ntests/integration/test_news_api.py::TestNewsAPI::test_list_news_authenticated PASSED [  3%]\ntests/integration/test_news_api.py::TestNewsAPI::test_list_news_unauthenticated PASSED [  6%]\ntests/integration/test_news_api.py::TestNewsAPI::test_retrieve_news PASSED [  9%]\ntests/integration/test_news_api.py::TestNewsAPI::test_create_news PASSED [ 12%]\ntests/integration/test_news_api.py::TestNewsAPI::test_update_news PASSED [ 15%]\ntests/integration/test_news_api.py::TestNewsAPI::test_filter_news_by_category PASSED [ 18%]\ntests/integration/test_news_api.py::TestNewsAPI::test_search_news PASSED [ 21%]\ntests/integration/test_news_api.py::TestNewsAPI::test_mark_news_urgent PASSED [ 25%]\ntests/integration/test_news_api.py::TestNewsAPI::test_share_news PASSED  [ 28%]\ntests/integration/test_news_api.py::TestNewsAPI::test_get_related_news PASSED [ 31%]\ntests/integration/test_news_api.py::TestNewsAPI::test_advanced_search PASSED [ 34%]\ntests/integration/test_news_api.py::TestCategoryAPI::test_list_categories PASSED [ 37%]\ntests/integration/test_news_api.py::TestCategoryAPI::test_create_category PASSED [ 40%]\ntests/integration/test_news_api.py::TestCategoryAPI::test_category_statistics PASSED [ 43%]\ntests/integration/test_news_api.py::TestTagAPI::test_list_tags PASSED    [ 46%]\ntests/integration/test_news_api.py::TestTagAPI::test_create_tag PASSED   [ 50%]\ntests/integration/test_news_api.py::TestNewsPermissions::test_unauthenticated_read_access_allowed PASSED [ 53%]\ntests/integration/test_news_api.py::TestNewsPermissions::test_read_only_access_for_regular_users PASSED [ 56%]\ntests/integration/test_webhook_integration.py::TestWebhookEndpoints::test_webhook_source_crud PASSED [ 59%]\ntests/integration/test_webhook_integration.py::TestWebhookEndpoints::test_webhook_statistics PASSED [ 62%]\ntests/integration/test_webhook_integration.py::TestWebhookEndpoints::test_webhook_test_endpoint PASSED [ 65%]\ntests/integration/test_webhook_integration.py::TestWebhookDashboard::test_webhook_dashboard PASSED [ 68%]\ntests/integration/test_webhook_integration.py::TestWebhookProcessing::test_webhook_processing_task_triggered PASSED [ 71%]\ntests/integration/test_webhook_integration.py::TestWebhookProcessing::test_webhook_log_creation PASSED [ 75%]\ntests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_receive_valid_webhook PASSED [ 78%]\ntests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_receive_webhook_invalid_source PASSED [ 81%]\ntests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_receive_webhook_invalid_json PASSED [ 84%]\ntests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_receive_webhook_missing_required_fields PASSED [ 87%]\ntests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_webhook_signature_verification PASSED [ 90%]\ntests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_webhook_signature_verification ERROR [ 90%]\ntests/integration/test_webhook_integration.py::TestWhatsAppWebhook::test_whatsapp_webhook_verification PASSED [ 93%]\ntests/integration/test_webhook_integration.py::TestWhatsAppWebhook::test_whatsapp_webhook_verification_invalid_token PASSED [ 96%]\ntests/integration/test_webhook_integration.py::TestWhatsAppWebhook::test_whatsapp_webhook_message_receive PASSED [100%]\n\n==================================== ERRORS ====================================\n_ ERROR at teardown of TestNewsWebhookReceiver.test_webhook_signature_verification _\n\nself = <django.db.backends.utils.CursorWrapper object at 0x725ab8a80950>\nsql = 'TRUNCATE \"notification_template\", \"auth_group\", \"classification_result\", \"api_key\", \"classification_statistic\", \"news...auth_user_groups\", \"news_tag\", \"classification_model\", \"webhook_source\", \"news_subcategory\", \"notification_statistic\";'\nparams = None\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x725ab8a80950>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n>               return self.cursor.execute(sql)\nE               psycopg2.errors.DeadlockDetected: deadlock detected\nE               DETAIL:  Process 2692 waits for AccessExclusiveLock on relation 24745 of database 16384; blocked by process 2615.\nE               Process 2615 waits for RowExclusiveLock on relation 24799 of database 16384; blocked by process 2692.\nE               HINT:  See server log for query details.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:87: DeadlockDetected\n\nThe above exception was the direct cause of the following exception:\n\nself = <django.core.management.commands.flush.Command object at 0x725ab8be2990>\noptions = {'allow_cascade': False, 'database': 'default', 'force_color': False, 'inhibit_post_migrate': False, ...}\ndatabase = 'default'\nconnection = <DatabaseWrapper vendor='postgresql' alias='default'>\nverbosity = 0, interactive = False, reset_sequences = False\nallow_cascade = False, inhibit_post_migrate = False\n\n        def handle(self, **options):\n            database = options[\"database\"]\n            connection = connections[database]\n            verbosity = options[\"verbosity\"]\n            interactive = options[\"interactive\"]\n            # The following are stealth options used by Django's internals.\n            reset_sequences = options.get(\"reset_sequences\", True)\n            allow_cascade = options.get(\"allow_cascade\", False)\n            inhibit_post_migrate = options.get(\"inhibit_post_migrate\", False)\n    \n            self.style = no_style()\n    \n            # Import the 'management' module within each installed app, to register\n            # dispatcher events.\n            for app_config in apps.get_app_configs():\n                try:\n                    import_module(\".management\", app_config.name)\n                except ImportError:\n                    pass\n    \n            sql_list = sql_flush(\n                self.style,\n                connection,\n                reset_sequences=reset_sequences,\n                allow_cascade=allow_cascade,\n            )\n    \n            if interactive:\n                confirm = input(\n                    \"\"\"You have requested a flush of the database.\n    This will IRREVERSIBLY DESTROY all data currently in the \"%s\" database,\n    and return each table to an empty state.\n    Are you sure you want to do this?\n    \n        Type 'yes' to continue, or 'no' to cancel: \"\"\"\n                    % connection.settings_dict[\"NAME\"]\n                )\n            else:\n                confirm = \"yes\"\n    \n            if confirm == \"yes\":\n                try:\n>                   connection.ops.execute_sql_flush(sql_list)\n\n/usr/local/lib/python3.11/site-packages/django/core/management/commands/flush.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/backends/base/operations.py:451: in execute_sql_flush\n    cursor.execute(sql)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x725ab8a80950>\nsql = 'TRUNCATE \"notification_template\", \"auth_group\", \"classification_result\", \"api_key\", \"classification_statistic\", \"news...auth_user_groups\", \"news_tag\", \"classification_model\", \"webhook_source\", \"news_subcategory\", \"notification_statistic\";'\nparams = None\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x725ab8a80950>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n>               return self.cursor.execute(sql)\nE               django.db.utils.OperationalError: deadlock detected\nE               DETAIL:  Process 2692 waits for AccessExclusiveLock on relation 24745 of database 16384; blocked by process 2615.\nE               Process 2615 waits for RowExclusiveLock on relation 24799 of database 16384; blocked by process 2692.\nE               HINT:  See server log for query details.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:87: OperationalError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest '_django_db_helper' for <Function test_webhook_signature_verification>>\ndjango_db_setup = None\ndjango_db_blocker = <pytest_django.plugin.DjangoDbBlocker object at 0x725b0219c790>\n\n    @pytest.fixture()\n    def _django_db_helper(\n        request: pytest.FixtureRequest,\n        django_db_setup: None,\n        django_db_blocker: DjangoDbBlocker,\n    ) -> Generator[None, None, None]:\n        from django import VERSION\n    \n        if is_django_unittest(request):\n            yield\n            return\n    \n        marker = request.node.get_closest_marker(\"django_db\")\n        if marker:\n            (\n                transactional,\n                reset_sequences,\n                databases,\n                serialized_rollback,\n                available_apps,\n            ) = validate_django_db(marker)\n        else:\n            (\n                transactional,\n                reset_sequences,\n                databases,\n                serialized_rollback,\n                available_apps,\n            ) = False, False, None, False, None\n    \n        transactional = (\n            transactional\n            or reset_sequences\n            or (\"transactional_db\" in request.fixturenames or \"live_server\" in request.fixturenames)\n        )\n        reset_sequences = reset_sequences or (\"django_db_reset_sequences\" in request.fixturenames)\n        serialized_rollback = serialized_rollback or (\n            \"django_db_serialized_rollback\" in request.fixturenames\n        )\n    \n        django_db_blocker.unblock()\n    \n        import django.db\n        import django.test\n    \n        if transactional:\n            test_case_class = django.test.TransactionTestCase\n        else:\n            test_case_class = django.test.TestCase\n    \n        _reset_sequences = reset_sequences\n        _serialized_rollback = serialized_rollback\n        _databases = databases\n        _available_apps = available_apps\n    \n        class PytestDjangoTestCase(test_case_class):  # type: ignore[misc,valid-type]\n            reset_sequences = _reset_sequences\n            serialized_rollback = _serialized_rollback\n            if _databases is not None:\n                databases = _databases\n            if _available_apps is not None:\n                available_apps = _available_apps\n    \n            # For non-transactional tests, skip executing `django.test.TestCase`'s\n            # `setUpClass`/`tearDownClass`, only execute the super class ones.\n            #\n            # `TestCase`'s class setup manages the `setUpTestData`/class-level\n            # transaction functionality. We don't use it; instead we (will) offer\n            # our own alternatives. So it only adds overhead, and does some things\n            # which conflict with our (planned) functionality, particularly, it\n            # closes all database connections in `tearDownClass` which inhibits\n            # wrapping tests in higher-scoped transactions.\n            #\n            # It's possible a new version of Django will add some unrelated\n            # functionality to these methods, in which case skipping them completely\n            # would not be desirable. Let's cross that bridge when we get there...\n            if not transactional:\n    \n                @classmethod\n                def setUpClass(cls) -> None:\n                    super(django.test.TestCase, cls).setUpClass()\n                    if VERSION < (4, 1):\n                        django.db.transaction.Atomic._ensure_durability = False\n    \n                @classmethod\n                def tearDownClass(cls) -> None:\n                    if VERSION < (4, 1):\n                        django.db.transaction.Atomic._ensure_durability = True\n                    super(django.test.TestCase, cls).tearDownClass()\n    \n        PytestDjangoTestCase.setUpClass()\n    \n        test_case = PytestDjangoTestCase(methodName=\"__init__\")\n        test_case._pre_setup()\n    \n        yield\n    \n>       test_case._post_teardown()\n\n/usr/local/lib/python3.11/site-packages/pytest_django/fixtures.py:255: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/test/testcases.py:1279: in _post_teardown\n    self._fixture_teardown()\n/usr/local/lib/python3.11/site-packages/django/test/testcases.py:1313: in _fixture_teardown\n    call_command(\n/usr/local/lib/python3.11/site-packages/django/core/management/__init__.py:194: in call_command\n    return command.execute(*args, **defaults)\n/usr/local/lib/python3.11/site-packages/django/core/management/base.py:458: in execute\n    output = self.handle(*args, **options)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.core.management.commands.flush.Command object at 0x725ab8be2990>\noptions = {'allow_cascade': False, 'database': 'default', 'force_color': False, 'inhibit_post_migrate': False, ...}\ndatabase = 'default'\nconnection = <DatabaseWrapper vendor='postgresql' alias='default'>\nverbosity = 0, interactive = False, reset_sequences = False\nallow_cascade = False, inhibit_post_migrate = False\n\n        def handle(self, **options):\n            database = options[\"database\"]\n            connection = connections[database]\n            verbosity = options[\"verbosity\"]\n            interactive = options[\"interactive\"]\n            # The following are stealth options used by Django's internals.\n            reset_sequences = options.get(\"reset_sequences\", True)\n            allow_cascade = options.get(\"allow_cascade\", False)\n            inhibit_post_migrate = options.get(\"inhibit_post_migrate\", False)\n    \n            self.style = no_style()\n    \n            # Import the 'management' module within each installed app, to register\n            # dispatcher events.\n            for app_config in apps.get_app_configs():\n                try:\n                    import_module(\".management\", app_config.name)\n                except ImportError:\n                    pass\n    \n            sql_list = sql_flush(\n                self.style,\n                connection,\n                reset_sequences=reset_sequences,\n                allow_cascade=allow_cascade,\n            )\n    \n            if interactive:\n                confirm = input(\n                    \"\"\"You have requested a flush of the database.\n    This will IRREVERSIBLY DESTROY all data currently in the \"%s\" database,\n    and return each table to an empty state.\n    Are you sure you want to do this?\n    \n        Type 'yes' to continue, or 'no' to cancel: \"\"\"\n                    % connection.settings_dict[\"NAME\"]\n                )\n            else:\n                confirm = \"yes\"\n    \n            if confirm == \"yes\":\n                try:\n                    connection.ops.execute_sql_flush(sql_list)\n                except Exception as exc:\n>                   raise CommandError(\n                        \"Database %s couldn't be flushed. Possible reasons:\\n\"\n                        \"  * The database isn't running or isn't configured correctly.\\n\"\n                        \"  * At least one of the expected database tables doesn't exist.\\n\"\n                        \"  * The SQL was invalid.\\n\"\n                        \"Hint: Look at the output of 'django-admin sqlflush'. \"\n                        \"That's the SQL this command wasn't able to run.\"\n                        % (connection.settings_dict[\"NAME\"],)\n                    ) from exc\nE                   django.core.management.base.CommandError: Database jota_news couldn't be flushed. Possible reasons:\nE                     * The database isn't running or isn't configured correctly.\nE                     * At least one of the expected database tables doesn't exist.\nE                     * The SQL was invalid.\nE                   Hint: Look at the output of 'django-admin sqlflush'. That's the SQL this command wasn't able to run.\n\n/usr/local/lib/python3.11/site-packages/django/core/management/commands/flush.py:75: CommandError\n---------------------------- Captured stderr setup -----------------------------\nINFO Webhook source created: Test Webhook Source\n------------------------------ Captured log setup ------------------------------\nINFO     apps.webhooks.signals:signals.py:24 Webhook source created: Test Webhook Source\n----------------------------- Captured stderr call -----------------------------\nINFO Webhook source updated: Test Webhook Source\nINFO Request started - POST /api/v1/webhooks/receive/Test Webhook Source/\nINFO Webhook log created: Test Webhook Source - processing\nINFO Webhook source updated: Test Webhook Source\nINFO Request completed - POST /api/v1/webhooks/receive/Test Webhook Source/ - 200\nINFO Request started - POST /api/v1/webhooks/receive/Test Webhook Source/\nINFO Request completed - POST /api/v1/webhooks/receive/Test Webhook Source/ - 401\nWARNING Unauthorized: /api/v1/webhooks/receive/Test Webhook Source/\n------------------------------ Captured log call -------------------------------\nINFO     apps.webhooks.signals:signals.py:24 Webhook source updated: Test Webhook Source\nINFO     apps.webhooks.signals:signals.py:54 Webhook log created: Test Webhook Source - processing\nINFO     apps.webhooks.signals:signals.py:24 Webhook source updated: Test Webhook Source\n=============================== warnings summary ===============================\ntests/integration/test_news_api.py:9\n  /app/tests/integration/test_news_api.py:9: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\ntests/integration/test_news_api.py:152\n  /app/tests/integration/test_news_api.py:152: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\ntests/integration/test_news_api.py:196\n  /app/tests/integration/test_news_api.py:196: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\ntests/integration/test_news_api.py:223\n  /app/tests/integration/test_news_api.py:223: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\ntests/integration/test_webhook_integration.py:14\n  /app/tests/integration/test_webhook_integration.py:14: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\ntests/integration/test_webhook_integration.py:72\n  /app/tests/integration/test_webhook_integration.py:72: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\ntests/integration/test_webhook_integration.py:169\n  /app/tests/integration/test_webhook_integration.py:169: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\ntests/integration/test_webhook_integration.py:241\n  /app/tests/integration/test_webhook_integration.py:241: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\ntests/integration/test_webhook_integration.py:261\n  /app/tests/integration/test_webhook_integration.py:261: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_webhook_signature_verification\n=================== 32 passed, 9 warnings, 1 error in 13.18s ===================\n"
    },
    "api__api_v1_news_categories_": {
      "status": "passed",
      "response_code": 200
    },
    "api__api_v1_news_tags_": {
      "status": "passed",
      "response_code": 200
    },
    "api__api_v1_news_articles_": {
      "status": "passed",
      "response_code": 200
    },
    "api__api_docs_": {
      "status": "passed",
      "response_code": 200
    },
    "api__metrics": {
      "status": "passed",
      "response_code": 200
    },
    "api__celery_metrics_": {
      "status": "passed",
      "response_code": 200
    },
    "api__business_metrics_": {
      "status": "passed",
      "response_code": 200
    },
    "api__security_metrics_": {
      "status": "passed",
      "response_code": 200
    }
  },
  "demos": {
    "news_creation": {
      "status": "passed"
    },
    "classification": {
      "status": "passed"
    },
    "webhook_processing": {
      "status": "failed",
      "error": "HTTP 401"
    },
    "monitoring_metrics": {
      "status": "passed"
    }
  },
  "performance": {
    "/api/v1/news/articles/": {
      "avg_response_time": 0.0188143253326416,
      "max_response_time": 0.020876169204711914,
      "min_response_time": 0.01756429672241211,
      "requests_count": 10
    },
    "/api/v1/news/categories/": {
      "avg_response_time": 0.016325998306274413,
      "max_response_time": 0.017501115798950195,
      "min_response_time": 0.015035390853881836,
      "requests_count": 10
    },
    "/health/": {
      "avg_response_time": 0.00402519702911377,
      "max_response_time": 0.004535675048828125,
      "min_response_time": 0.0036439895629882812,
      "requests_count": 10
    }
  },
  "health_checks": {
    "API Server": {
      "status": "healthy",
      "response_time": 0.004858
    },
    "Grafana": {
      "status": "healthy",
      "response_time": 0.002096
    },
    "Celery Monitoring": {
      "status": "healthy",
      "response_time": 1.010049
    },
    "Business Metrics": {
      "status": "healthy",
      "response_time": 0.004649
    },
    "Security Monitoring": {
      "status": "healthy_stale",
      "response_time": 0.004593
    }
  },
  "monitoring": {
    "grafana": {
      "status": "available",
      "dashboard_count": 5,
      "dashboards": [
        {
          "id": 5,
          "uid": "celery-dashboard",
          "orgId": 1,
          "title": "Celery Task Monitoring",
          "uri": "db/celery-task-monitoring",
          "url": "/d/celery-dashboard/celery-task-monitoring",
          "slug": "",
          "type": "dash-db",
          "tags": [
            "celery",
            "monitoring",
            "tasks"
          ],
          "isStarred": false,
          "sortMeta": 0,
          "isDeleted": false
        },
        {
          "id": 4,
          "uid": "business-dashboard",
          "orgId": 1,
          "title": "JOTA News - Business Metrics",
          "uri": "db/jota-news-business-metrics",
          "url": "/d/business-dashboard/jota-news-business-metrics",
          "slug": "",
          "type": "dash-db",
          "tags": [
            "business",
            "jota",
            "metrics",
            "news"
          ],
          "isStarred": false,
          "sortMeta": 0,
          "isDeleted": false
        },
        {
          "id": 3,
          "uid": "security-dashboard",
          "orgId": 1,
          "title": "JOTA News - Security Monitoring",
          "uri": "db/jota-news-security-monitoring",
          "url": "/d/security-dashboard/jota-news-security-monitoring",
          "slug": "",
          "type": "dash-db",
          "tags": [
            "auth",
            "jota",
            "monitoring",
            "security"
          ],
          "isStarred": false,
          "sortMeta": 0,
          "isDeleted": false
        },
        {
          "id": 1,
          "uid": "jota-news-complete",
          "orgId": 1,
          "title": "JOTA News System - Complete Dashboard",
          "uri": "db/jota-news-system-complete-dashboard",
          "url": "/d/jota-news-complete/jota-news-system-complete-dashboard",
          "slug": "",
          "type": "dash-db",
          "tags": [
            "jota",
            "monitoring",
            "news"
          ],
          "isStarred": false,
          "sortMeta": 0,
          "isDeleted": false
        },
        {
          "id": 2,
          "uid": "redis-dashboard",
          "orgId": 1,
          "title": "Redis Dashboard",
          "uri": "db/redis-dashboard",
          "url": "/d/redis-dashboard/redis-dashboard",
          "slug": "",
          "type": "dash-db",
          "tags": [
            "cache",
            "jota",
            "redis"
          ],
          "isStarred": false,
          "sortMeta": 0,
          "isDeleted": false
        }
      ]
    }
  },
  "summary": {
    "total_tests": 10,
    "passed_tests": 9,
    "failed_tests": 1,
    "success_rate": 90.0,
    "execution_time": "2025-07-12T19:10:09.025879"
  }
}