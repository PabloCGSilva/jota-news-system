{
  "timestamp": "2025-07-11T22:08:18.202736",
  "tests": {
    "unit": {
      "status": "failed",
      "error": "time=\"2025-07-11T22:08:43-03:00\" level=warning msg=\"/mnt/c/Users/pablo/JOTA/jota-news-system/docker-compose.yml: `version` is obsolete\"\n",
      "output": "============================= test session starts ==============================\nplatform linux -- Python 3.11.13, pytest-7.4.3, pluggy-1.6.0 -- /usr/local/bin/python3.11\ncachedir: .pytest_cache\ndjango: version: 4.2.7\nrootdir: /app\nconfigfile: pytest.ini\nplugins: Faker-37.4.0, cov-4.1.0, django-4.7.0, anyio-4.9.0\ncollecting ... collected 37 items\n\ntests/unit/test_classification_models.py::TestClassificationRule::test_create_classification_rule PASSED [  2%]\ntests/unit/test_classification_models.py::TestClassificationRule::test_rule_increment_matches PASSED [  5%]\ntests/unit/test_classification_models.py::TestClassificationRule::test_rule_increment_successful_classifications PASSED [  8%]\ntests/unit/test_classification_models.py::TestClassificationRule::test_rule_success_rate_calculation PASSED [ 10%]\ntests/unit/test_classification_models.py::TestClassificationRule::test_rule_unique_name PASSED [ 13%]\ntests/unit/test_classification_models.py::TestClassificationModel::test_create_classification_model PASSED [ 16%]\ntests/unit/test_classification_models.py::TestClassificationModel::test_model_increment_predictions PASSED [ 18%]\ntests/unit/test_classification_models.py::TestClassificationResult::test_create_classification_result ERROR [ 21%]\ntests/unit/test_classification_models.py::TestClassificationResult::test_accept_classification ERROR [ 24%]\ntests/unit/test_classification_models.py::TestClassificationTrainingData::test_create_training_data ERROR [ 27%]\ntests/unit/test_classification_models.py::TestClassificationStatistic::test_create_classification_statistic PASSED [ 29%]\ntests/unit/test_classification_models.py::TestClassificationStatistic::test_statistic_success_rate_calculation PASSED [ 32%]\ntests/unit/test_news_models.py::TestCategoryModel::test_create_category PASSED [ 35%]\ntests/unit/test_news_models.py::TestCategoryModel::test_category_unique_name PASSED [ 37%]\ntests/unit/test_news_models.py::TestCategoryModel::test_category_unique_slug PASSED [ 40%]\ntests/unit/test_news_models.py::TestSubcategoryModel::test_create_subcategory PASSED [ 43%]\ntests/unit/test_news_models.py::TestSubcategoryModel::test_subcategory_category_slug_unique_together PASSED [ 45%]\ntests/unit/test_news_models.py::TestTagModel::test_create_tag PASSED     [ 48%]\ntests/unit/test_news_models.py::TestTagModel::test_tag_unique_name PASSED [ 51%]\ntests/unit/test_news_models.py::TestNewsModel::test_create_news FAILED   [ 54%]\ntests/unit/test_news_models.py::TestNewsModel::test_news_auto_word_count FAILED [ 56%]\ntests/unit/test_news_models.py::TestNewsModel::test_news_auto_reading_time FAILED [ 59%]\ntests/unit/test_news_models.py::TestNewsModel::test_news_auto_summary_generation FAILED [ 62%]\ntests/unit/test_news_models.py::TestNewsModel::test_news_increment_view_count ERROR [ 64%]\ntests/unit/test_news_models.py::TestNewsModel::test_news_increment_share_count ERROR [ 67%]\ntests/unit/test_news_models.py::TestNewsModel::test_news_external_id_unique PASSED [ 70%]\ntests/unit/test_news_models.py::TestNewsProcessingLog::test_create_processing_log ERROR [ 72%]\ntests/unit/test_news_serializers.py::TestCategorySerializer::test_serialize_category PASSED [ 75%]\ntests/unit/test_news_serializers.py::TestCategorySerializer::test_deserialize_category PASSED [ 78%]\ntests/unit/test_news_serializers.py::TestSubcategorySerializer::test_serialize_subcategory FAILED [ 81%]\ntests/unit/test_news_serializers.py::TestTagSerializer::test_serialize_tag PASSED [ 83%]\ntests/unit/test_news_serializers.py::TestNewsSerializers::test_news_list_serializer ERROR [ 86%]\ntests/unit/test_news_serializers.py::TestNewsSerializers::test_news_detail_serializer ERROR [ 89%]\ntests/unit/test_news_serializers.py::TestNewsSerializers::test_news_create_serializer FAILED [ 91%]\ntests/unit/test_news_serializers.py::TestNewsSerializers::test_news_update_serializer ERROR [ 94%]\ntests/unit/test_news_serializers.py::TestNewsSerializers::test_news_create_serializer_validation PASSED [ 97%]\ntests/unit/test_news_serializers.py::TestNewsSerializers::test_news_create_with_duplicate_external_id ERROR [100%]\n\n==================================== ERRORS ====================================\n_ ERROR at setup of TestClassificationResult.test_create_classification_result _\n\nself = <django.db.backends.utils.CursorWrapper object at 0x78662a14c250>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('76fe2197-0cb9-4131-a875-4b4972bbb9ff'), datetime.datetime(2025, 7, 12, 1, 8, 46, 677900, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x78662a14c250>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\ntag = <Tag: Test Tag>\n\n    @pytest.fixture\n    def news(db, category, subcategory, tag):\n        \"\"\"Create a test news article.\"\"\"\n>       news_item = News.objects.create(\n            title='Test News Article',\n            content='This is a test news article content with enough text to be meaningful.',\n            summary='Test summary',\n            source='Test Source',\n            author='Test Author',\n            category=category,\n            subcategory=subcategory,\n            published_at=timezone.now(),\n            is_published=True\n        )\n\ntests/conftest.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x78662a14c250>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('76fe2197-0cb9-4131-a875-4b4972bbb9ff'), datetime.datetime(2025, 7, 12, 1, 8, 46, 677900, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x78662a14c250>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n____ ERROR at setup of TestClassificationResult.test_accept_classification _____\n\nself = <django.db.backends.utils.CursorWrapper object at 0x7866298bc190>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('bbf188bf-93f8-4645-bb89-407a8f89877b'), datetime.datetime(2025, 7, 12, 1, 8, 47, 387587, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7866298bc190>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\ntag = <Tag: Test Tag>\n\n    @pytest.fixture\n    def news(db, category, subcategory, tag):\n        \"\"\"Create a test news article.\"\"\"\n>       news_item = News.objects.create(\n            title='Test News Article',\n            content='This is a test news article content with enough text to be meaningful.',\n            summary='Test summary',\n            source='Test Source',\n            author='Test Author',\n            category=category,\n            subcategory=subcategory,\n            published_at=timezone.now(),\n            is_published=True\n        )\n\ntests/conftest.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x7866298bc190>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('bbf188bf-93f8-4645-bb89-407a8f89877b'), datetime.datetime(2025, 7, 12, 1, 8, 47, 387587, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7866298bc190>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n__ ERROR at setup of TestClassificationTrainingData.test_create_training_data __\n\nself = <django.db.backends.utils.CursorWrapper object at 0x7866298884d0>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('71dcd053-5567-4dd9-8366-424c9f08d76d'), datetime.datetime(2025, 7, 12, 1, 8, 47, 799555, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7866298884d0>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\ntag = <Tag: Test Tag>\n\n    @pytest.fixture\n    def news(db, category, subcategory, tag):\n        \"\"\"Create a test news article.\"\"\"\n>       news_item = News.objects.create(\n            title='Test News Article',\n            content='This is a test news article content with enough text to be meaningful.',\n            summary='Test summary',\n            source='Test Source',\n            author='Test Author',\n            category=category,\n            subcategory=subcategory,\n            published_at=timezone.now(),\n            is_published=True\n        )\n\ntests/conftest.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x7866298884d0>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('71dcd053-5567-4dd9-8366-424c9f08d76d'), datetime.datetime(2025, 7, 12, 1, 8, 47, 799555, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7866298884d0>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n________ ERROR at setup of TestNewsModel.test_news_increment_view_count ________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x78662a12b790>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('957a08db-54a8-4449-8119-1e2a7c960d3c'), datetime.datetime(2025, 7, 12, 1, 8, 49, 805880, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x78662a12b790>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\ntag = <Tag: Test Tag>\n\n    @pytest.fixture\n    def news(db, category, subcategory, tag):\n        \"\"\"Create a test news article.\"\"\"\n>       news_item = News.objects.create(\n            title='Test News Article',\n            content='This is a test news article content with enough text to be meaningful.',\n            summary='Test summary',\n            source='Test Source',\n            author='Test Author',\n            category=category,\n            subcategory=subcategory,\n            published_at=timezone.now(),\n            is_published=True\n        )\n\ntests/conftest.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x78662a12b790>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('957a08db-54a8-4449-8119-1e2a7c960d3c'), datetime.datetime(2025, 7, 12, 1, 8, 49, 805880, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x78662a12b790>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n_______ ERROR at setup of TestNewsModel.test_news_increment_share_count ________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x786629bebf50>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('3a69d09d-df18-42cd-839b-932cf92a663c'), datetime.datetime(2025, 7, 12, 1, 8, 50, 219955, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x786629bebf50>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\ntag = <Tag: Test Tag>\n\n    @pytest.fixture\n    def news(db, category, subcategory, tag):\n        \"\"\"Create a test news article.\"\"\"\n>       news_item = News.objects.create(\n            title='Test News Article',\n            content='This is a test news article content with enough text to be meaningful.',\n            summary='Test summary',\n            source='Test Source',\n            author='Test Author',\n            category=category,\n            subcategory=subcategory,\n            published_at=timezone.now(),\n            is_published=True\n        )\n\ntests/conftest.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x786629bebf50>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('3a69d09d-df18-42cd-839b-932cf92a663c'), datetime.datetime(2025, 7, 12, 1, 8, 50, 219955, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x786629bebf50>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n______ ERROR at setup of TestNewsProcessingLog.test_create_processing_log ______\n\nself = <django.db.backends.utils.CursorWrapper object at 0x7865e613b550>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('7d296b69-c01d-411e-9a5a-244378448c8a'), datetime.datetime(2025, 7, 12, 1, 8, 52, 130727, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7865e613b550>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\ntag = <Tag: Test Tag>\n\n    @pytest.fixture\n    def news(db, category, subcategory, tag):\n        \"\"\"Create a test news article.\"\"\"\n>       news_item = News.objects.create(\n            title='Test News Article',\n            content='This is a test news article content with enough text to be meaningful.',\n            summary='Test summary',\n            source='Test Source',\n            author='Test Author',\n            category=category,\n            subcategory=subcategory,\n            published_at=timezone.now(),\n            is_published=True\n        )\n\ntests/conftest.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x7865e613b550>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('7d296b69-c01d-411e-9a5a-244378448c8a'), datetime.datetime(2025, 7, 12, 1, 8, 52, 130727, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7865e613b550>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n_______ ERROR at setup of TestNewsSerializers.test_news_list_serializer ________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x7865e5fcd050>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('d8e706d6-b36a-4221-a4b0-20f1acd17f9c'), datetime.datetime(2025, 7, 12, 1, 8, 52, 658293, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7865e5fcd050>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\ntag = <Tag: Test Tag>\n\n    @pytest.fixture\n    def news(db, category, subcategory, tag):\n        \"\"\"Create a test news article.\"\"\"\n>       news_item = News.objects.create(\n            title='Test News Article',\n            content='This is a test news article content with enough text to be meaningful.',\n            summary='Test summary',\n            source='Test Source',\n            author='Test Author',\n            category=category,\n            subcategory=subcategory,\n            published_at=timezone.now(),\n            is_published=True\n        )\n\ntests/conftest.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x7865e5fcd050>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('d8e706d6-b36a-4221-a4b0-20f1acd17f9c'), datetime.datetime(2025, 7, 12, 1, 8, 52, 658293, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7865e5fcd050>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n______ ERROR at setup of TestNewsSerializers.test_news_detail_serializer _______\n\nself = <django.db.backends.utils.CursorWrapper object at 0x7865e5929950>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('b3c016d5-ba67-4458-8f9e-85efe926dd21'), datetime.datetime(2025, 7, 12, 1, 8, 53, 107099, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7865e5929950>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\ntag = <Tag: Test Tag>\n\n    @pytest.fixture\n    def news(db, category, subcategory, tag):\n        \"\"\"Create a test news article.\"\"\"\n>       news_item = News.objects.create(\n            title='Test News Article',\n            content='This is a test news article content with enough text to be meaningful.',\n            summary='Test summary',\n            source='Test Source',\n            author='Test Author',\n            category=category,\n            subcategory=subcategory,\n            published_at=timezone.now(),\n            is_published=True\n        )\n\ntests/conftest.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x7865e5929950>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('b3c016d5-ba67-4458-8f9e-85efe926dd21'), datetime.datetime(2025, 7, 12, 1, 8, 53, 107099, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7865e5929950>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n______ ERROR at setup of TestNewsSerializers.test_news_update_serializer _______\n\nself = <django.db.backends.utils.CursorWrapper object at 0x7865e552dd90>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('0c16be75-63dc-4bab-b47e-90734bdc2bd3'), datetime.datetime(2025, 7, 12, 1, 8, 53, 931973, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7865e552dd90>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\ntag = <Tag: Test Tag>\n\n    @pytest.fixture\n    def news(db, category, subcategory, tag):\n        \"\"\"Create a test news article.\"\"\"\n>       news_item = News.objects.create(\n            title='Test News Article',\n            content='This is a test news article content with enough text to be meaningful.',\n            summary='Test summary',\n            source='Test Source',\n            author='Test Author',\n            category=category,\n            subcategory=subcategory,\n            published_at=timezone.now(),\n            is_published=True\n        )\n\ntests/conftest.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x7865e552dd90>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('0c16be75-63dc-4bab-b47e-90734bdc2bd3'), datetime.datetime(2025, 7, 12, 1, 8, 53, 931973, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7865e552dd90>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n_ ERROR at setup of TestNewsSerializers.test_news_create_with_duplicate_external_id _\n\nself = <django.db.backends.utils.CursorWrapper object at 0x7865e5b3e010>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('473413e9-2c2f-487a-af06-987f5cc565b4'), datetime.datetime(2025, 7, 12, 1, 8, 54, 389028, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7865e5b3e010>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\ntag = <Tag: Test Tag>\n\n    @pytest.fixture\n    def news(db, category, subcategory, tag):\n        \"\"\"Create a test news article.\"\"\"\n>       news_item = News.objects.create(\n            title='Test News Article',\n            content='This is a test news article content with enough text to be meaningful.',\n            summary='Test summary',\n            source='Test Source',\n            author='Test Author',\n            category=category,\n            subcategory=subcategory,\n            published_at=timezone.now(),\n            is_published=True\n        )\n\ntests/conftest.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x7865e5b3e010>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('473413e9-2c2f-487a-af06-987f5cc565b4'), datetime.datetime(2025, 7, 12, 1, 8, 54, 389028, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7865e5b3e010>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n=================================== FAILURES ===================================\n________________________ TestNewsModel.test_create_news ________________________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x7866298bf9d0>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('0b335517-ef97-4468-bdf0-b98c1f36725d'), datetime.datetime(2025, 7, 12, 1, 8, 48, 262633, tzinfo=datetime.timezo...tetime.timezone.utc), 'Test News Article', 'This is a test news article with sufficient content.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7866298bf9d0>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.unit.test_news_models.TestNewsModel object at 0x78662a942f90>\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\ntag = <Tag: Test Tag>\n\n    def test_create_news(self, db, category, subcategory, tag):\n        \"\"\"Test creating a news article.\"\"\"\n>       news = News.objects.create(\n            title='Test News Article',\n            content='This is a test news article with sufficient content.',\n            summary='Test summary',\n            source='Test Source',\n            author='Test Author',\n            category=category,\n            subcategory=subcategory,\n            published_at=timezone.now()\n        )\n\ntests/unit/test_news_models.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x7866298bf9d0>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('0b335517-ef97-4468-bdf0-b98c1f36725d'), datetime.datetime(2025, 7, 12, 1, 8, 48, 262633, tzinfo=datetime.timezo...tetime.timezone.utc), 'Test News Article', 'This is a test news article with sufficient content.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7866298bf9d0>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n___________________ TestNewsModel.test_news_auto_word_count ____________________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x786629507f10>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('02938723-f1d9-4ae0-8586-191d5d4aac9b'), datetime.datetime(2025, 7, 12, 1, 8, 48, 651458, tzinfo=datetime.timezo...st', 'This is a test content with exactly ten words here.', 'This is a test content with exactly ten words here.', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x786629507f10>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.unit.test_news_models.TestNewsModel object at 0x78662a988110>\ndb = None, category = <Category: Test Category>\n\n    def test_news_auto_word_count(self, db, category):\n        \"\"\"Test automatic word count calculation.\"\"\"\n        content = 'This is a test content with exactly ten words here.'\n>       news = News.objects.create(\n            title='Test',\n            content=content,\n            source='Test',\n            category=category\n        )\n\ntests/unit/test_news_models.py:145: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x786629507f10>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('02938723-f1d9-4ae0-8586-191d5d4aac9b'), datetime.datetime(2025, 7, 12, 1, 8, 48, 651458, tzinfo=datetime.timezo...st', 'This is a test content with exactly ten words here.', 'This is a test content with exactly ten words here.', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x786629507f10>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n__________________ TestNewsModel.test_news_auto_reading_time ___________________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x786629ab8f90>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('26d4dbdd-9e75-465e-9f3d-fa03c6158c3d'), datetime.datetime(2025, 7, 12, 1, 8, 49, 62004, tzinfo=datetime.timezon...d word word word word word word word word word word word word word word word word word word word word word wo...', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x786629ab8f90>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.unit.test_news_models.TestNewsModel object at 0x78662a989810>\ndb = None, category = <Category: Test Category>\n\n    def test_news_auto_reading_time(self, db, category):\n        \"\"\"Test automatic reading time calculation.\"\"\"\n        # Create content with ~400 words (should be 2 minutes at 200 WPM)\n        content = ' '.join(['word'] * 400)\n>       news = News.objects.create(\n            title='Test',\n            content=content,\n            source='Test',\n            category=category\n        )\n\ntests/unit/test_news_models.py:158: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x786629ab8f90>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('26d4dbdd-9e75-465e-9f3d-fa03c6158c3d'), datetime.datetime(2025, 7, 12, 1, 8, 49, 62004, tzinfo=datetime.timezon...d word word word word word word word word word word word word word word word word word word word word word wo...', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x786629ab8f90>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n_______________ TestNewsModel.test_news_auto_summary_generation ________________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x786629de3310>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('c658eadf-07a1-4b1e-b40a-c87ac5647c7b'), datetime.datetime(2025, 7, 12, 1, 8, 49, 405867, tzinfo=datetime.timezo...AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x786629de3310>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.unit.test_news_models.TestNewsModel object at 0x78662a98bd50>\ndb = None, category = <Category: Test Category>\n\n    def test_news_auto_summary_generation(self, db, category):\n        \"\"\"Test automatic summary generation.\"\"\"\n        long_content = 'A' * 1000  # Content longer than 500 chars\n>       news = News.objects.create(\n            title='Test',\n            content=long_content,\n            source='Test',\n            category=category\n        )\n\ntests/unit/test_news_models.py:170: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x786629de3310>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('c658eadf-07a1-4b1e-b40a-c87ac5647c7b'), datetime.datetime(2025, 7, 12, 1, 8, 49, 405867, tzinfo=datetime.timezo...AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x786629de3310>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n_____________ TestSubcategorySerializer.test_serialize_subcategory _____________\n\nself = <tests.unit.test_news_serializers.TestSubcategorySerializer object at 0x78662a5b9110>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\n\n    def test_serialize_subcategory(self, subcategory):\n        \"\"\"Test serializing a subcategory.\"\"\"\n        serializer = SubcategorySerializer(subcategory)\n        data = serializer.data\n    \n        assert data['name'] == subcategory.name\n>       assert data['category'] == str(subcategory.category.id)\nE       AssertionError: assert UUID('2dead2d9-4a51-4a95-9baf-3562be58ff2a') == '2dead2d9-4a51-4a95-9baf-3562be58ff2a'\nE        +  where '2dead2d9-4a51-4a95-9baf-3562be58ff2a' = str(UUID('2dead2d9-4a51-4a95-9baf-3562be58ff2a'))\nE        +    where UUID('2dead2d9-4a51-4a95-9baf-3562be58ff2a') = <Category: Test Category>.id\nE        +      where <Category: Test Category> = <Subcategory: Test Category - Test Subcategory>.category\n\ntests/unit/test_news_serializers.py:60: AssertionError\n_______________ TestNewsSerializers.test_news_create_serializer ________________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x7865e5f3ad10>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('a2881d5e-73bc-4582-997f-e9ce90f1508e'), datetime.datetime(2025, 7, 12, 1, 8, 53, 468759, tzinfo=datetime.timezo... Article', 'This is new news content with sufficient length.', 'This is new news content with sufficient length.', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7865e5f3ad10>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.unit.test_news_serializers.TestNewsSerializers object at 0x78662a5b9e10>\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\n\n    def test_news_create_serializer(self, db, category, subcategory):\n        \"\"\"Test NewsCreateSerializer.\"\"\"\n        data = {\n            'title': 'New News Article',\n            'content': 'This is new news content with sufficient length.',\n            'source': 'Test Source',\n            'author': 'Test Author',\n            'category': str(category.id),\n            'subcategory': str(subcategory.id),\n            'tag_names': ['tag1', 'tag2'],\n            'is_urgent': False,\n            'is_published': True\n        }\n    \n        serializer = NewsCreateSerializer(data=data)\n        assert serializer.is_valid(), serializer.errors\n    \n>       news = serializer.save()\n\ntests/unit/test_news_serializers.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/rest_framework/serializers.py:212: in save\n    self.instance = self.create(validated_data)\napps/news/serializers.py:117: in create\n    news = News.objects.create(**validated_data)\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x7865e5f3ad10>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('a2881d5e-73bc-4582-997f-e9ce90f1508e'), datetime.datetime(2025, 7, 12, 1, 8, 53, 468759, tzinfo=datetime.timezo... Article', 'This is new news content with sufficient length.', 'This is new news content with sufficient length.', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7865e5f3ad10>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n=============================== warnings summary ===============================\ntests/unit/test_classification_models.py:14\n  /app/tests/unit/test_classification_models.py:14: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_classification_models.py:80\n  /app/tests/unit/test_classification_models.py:80: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_classification_models.py:119\n  /app/tests/unit/test_classification_models.py:119: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_classification_models.py:172\n  /app/tests/unit/test_classification_models.py:172: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_classification_models.py:196\n  /app/tests/unit/test_classification_models.py:196: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_models.py:13\n  /app/tests/unit/test_news_models.py:13: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_models.py:53\n  /app/tests/unit/test_news_models.py:53: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_models.py:88\n  /app/tests/unit/test_news_models.py:88: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_models.py:114\n  /app/tests/unit/test_news_models.py:114: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_models.py:213\n  /app/tests/unit/test_news_models.py:213: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_serializers.py:15\n  /app/tests/unit/test_news_serializers.py:15: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_serializers.py:50\n  /app/tests/unit/test_news_serializers.py:50: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_serializers.py:65\n  /app/tests/unit/test_news_serializers.py:65: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\ntests/unit/test_news_serializers.py:79\n  /app/tests/unit/test_news_serializers.py:79: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n\n---------- coverage: platform linux, python 3.11.13-final-0 ----------\nName                                                                           Stmts   Miss  Cover\n--------------------------------------------------------------------------------------------------\napps/__init__.py                                                                   0      0   100%\napps/authentication/__init__.py                                                    0      0   100%\napps/authentication/admin.py                                                      34      4    88%\napps/authentication/apps.py                                                       10      0   100%\napps/authentication/backends.py                                                   24     24     0%\napps/authentication/drf_authentication.py                                         38     38     0%\napps/authentication/migrations/0001_initial.py                                    11     11     0%\napps/authentication/migrations/__init__.py                                         0      0   100%\napps/authentication/models.py                                                     63      7    89%\napps/authentication/serializers.py                                                97     97     0%\napps/authentication/urls.py                                                       19     19     0%\napps/authentication/views.py                                                     104    104     0%\napps/classification/__init__.py                                                    0      0   100%\napps/classification/admin.py                                                     144     63    56%\napps/classification/apps.py                                                        7      0   100%\napps/classification/classifier.py                                                225    169    25%\napps/classification/migrations/0001_initial.py                                     8      8     0%\napps/classification/migrations/__init__.py                                         0      0   100%\napps/classification/models.py                                                    162     15    91%\napps/classification/serializers.py                                                87     87     0%\napps/classification/signals.py                                                    38     14    63%\napps/classification/tasks.py                                                     168    146    13%\napps/classification/urls.py                                                       12     12     0%\napps/classification/views.py                                                     168    168     0%\napps/demo/__init__.py                                                              0      0   100%\napps/demo/apps.py                                                                  5      0   100%\napps/demo/urls.py                                                                  4      4     0%\napps/demo/views.py                                                               167    167     0%\napps/news/__init__.py                                                              0      0   100%\napps/news/admin.py                                                                91     20    78%\napps/news/apps.py                                                                  7      0   100%\napps/news/filters.py                                                              62     62     0%\napps/news/management/__init__.py                                                   0      0   100%\napps/news/management/commands/__init__.py                                          0      0   100%\napps/news/management/commands/create_sample_data.py                               78     78     0%\napps/news/migrations/0001_initial.py                                              11     11     0%\napps/news/migrations/0002_remove_news_news_news_title_ad75b1_gin_and_more.py       5      5     0%\napps/news/migrations/__init__.py                                                   0      0   100%\napps/news/models.py                                                              130      9    93%\napps/news/pagination.py                                                           15     15     0%\napps/news/serializers.py                                                          92     18    80%\napps/news/signals.py                                                              39     12    69%\napps/news/tasks.py                                                                93     93     0%\napps/news/urls.py                                                                 12     12     0%\napps/news/views.py                                                               149    149     0%\napps/notifications/__init__.py                                                     0      0   100%\napps/notifications/admin.py                                                      141     56    60%\napps/notifications/apps.py                                                         7      0   100%\napps/notifications/migrations/0001_initial.py                                      9      9     0%\napps/notifications/migrations/__init__.py                                          0      0   100%\napps/notifications/models.py                                                     202     64    68%\napps/notifications/providers.py                                                  140    140     0%\napps/notifications/serializers.py                                                129    129     0%\napps/notifications/signals.py                                                     37     25    32%\napps/notifications/tasks.py                                                      194    194     0%\napps/notifications/urls.py                                                        12     12     0%\napps/notifications/views.py                                                      211    211     0%\napps/webhooks/__init__.py                                                          0      0   100%\napps/webhooks/admin.py                                                           105     40    62%\napps/webhooks/apps.py                                                              7      0   100%\napps/webhooks/migrations/0001_initial.py                                           7      7     0%\napps/webhooks/migrations/__init__.py                                               0      0   100%\napps/webhooks/models.py                                                          124     30    76%\napps/webhooks/serializers.py                                                      81     81     0%\napps/webhooks/signals.py                                                          28     18    36%\napps/webhooks/tasks.py                                                           151    151     0%\napps/webhooks/urls.py                                                              9      9     0%\napps/webhooks/utils.py                                                           121    121     0%\napps/webhooks/views.py                                                           138    138     0%\n--------------------------------------------------------------------------------------------------\nTOTAL                                                                           4232   3076    27%\nCoverage JSON written to file coverage.json\n\n=========================== short test summary info ============================\nFAILED tests/unit/test_news_models.py::TestNewsModel::test_create_news - djan...\nFAILED tests/unit/test_news_models.py::TestNewsModel::test_news_auto_word_count\nFAILED tests/unit/test_news_models.py::TestNewsModel::test_news_auto_reading_time\nFAILED tests/unit/test_news_models.py::TestNewsModel::test_news_auto_summary_generation\nFAILED tests/unit/test_news_serializers.py::TestSubcategorySerializer::test_serialize_subcategory\nFAILED tests/unit/test_news_serializers.py::TestNewsSerializers::test_news_create_serializer\nERROR tests/unit/test_classification_models.py::TestClassificationResult::test_create_classification_result\nERROR tests/unit/test_classification_models.py::TestClassificationResult::test_accept_classification\nERROR tests/unit/test_classification_models.py::TestClassificationTrainingData::test_create_training_data\nERROR tests/unit/test_news_models.py::TestNewsModel::test_news_increment_view_count\nERROR tests/unit/test_news_models.py::TestNewsModel::test_news_increment_share_count\nERROR tests/unit/test_news_models.py::TestNewsProcessingLog::test_create_processing_log\nERROR tests/unit/test_news_serializers.py::TestNewsSerializers::test_news_list_serializer\nERROR tests/unit/test_news_serializers.py::TestNewsSerializers::test_news_detail_serializer\nERROR tests/unit/test_news_serializers.py::TestNewsSerializers::test_news_update_serializer\nERROR tests/unit/test_news_serializers.py::TestNewsSerializers::test_news_create_with_duplicate_external_id\n============ 6 failed, 21 passed, 14 warnings, 10 errors in 16.36s =============\n"
    },
    "integration": {
      "status": "failed",
      "error": "time=\"2025-07-11T22:09:03-03:00\" level=warning msg=\"/mnt/c/Users/pablo/JOTA/jota-news-system/docker-compose.yml: `version` is obsolete\"\n",
      "output": "============================= test session starts ==============================\nplatform linux -- Python 3.11.13, pytest-7.4.3, pluggy-1.6.0 -- /usr/local/bin/python3.11\ncachedir: .pytest_cache\ndjango: version: 4.2.7\nrootdir: /app\nconfigfile: pytest.ini\nplugins: Faker-37.4.0, cov-4.1.0, django-4.7.0, anyio-4.9.0\ncollecting ... collected 32 items\n\ntests/integration/test_news_api.py::TestNewsAPI::test_list_news_authenticated ERROR [  3%]\ntests/integration/test_news_api.py::TestNewsAPI::test_list_news_unauthenticated ERROR [  6%]\ntests/integration/test_news_api.py::TestNewsAPI::test_retrieve_news ERROR [  9%]\ntests/integration/test_news_api.py::TestNewsAPI::test_create_news FAILED [ 12%]\ntests/integration/test_news_api.py::TestNewsAPI::test_update_news ERROR  [ 15%]\ntests/integration/test_news_api.py::TestNewsAPI::test_filter_news_by_category ERROR [ 18%]\ntests/integration/test_news_api.py::TestNewsAPI::test_search_news ERROR  [ 21%]\ntests/integration/test_news_api.py::TestNewsAPI::test_mark_news_urgent ERROR [ 25%]\ntests/integration/test_news_api.py::TestNewsAPI::test_share_news ERROR   [ 28%]\ntests/integration/test_news_api.py::TestNewsAPI::test_get_related_news ERROR [ 31%]\ntests/integration/test_news_api.py::TestNewsAPI::test_advanced_search ERROR [ 34%]\ntests/integration/test_news_api.py::TestCategoryAPI::test_list_categories FAILED [ 37%]\ntests/integration/test_news_api.py::TestCategoryAPI::test_create_category PASSED [ 40%]\ntests/integration/test_news_api.py::TestCategoryAPI::test_category_statistics ERROR [ 43%]\ntests/integration/test_news_api.py::TestTagAPI::test_list_tags PASSED    [ 46%]\ntests/integration/test_news_api.py::TestTagAPI::test_create_tag PASSED   [ 50%]\ntests/integration/test_news_api.py::TestNewsPermissions::test_unauthenticated_access_denied ERROR [ 53%]\ntests/integration/test_news_api.py::TestNewsPermissions::test_read_only_access_for_regular_users PASSED [ 56%]\ntests/integration/test_webhook_integration.py::TestWebhookEndpoints::test_webhook_source_crud PASSED [ 59%]\ntests/integration/test_webhook_integration.py::TestWebhookEndpoints::test_webhook_statistics PASSED [ 62%]\ntests/integration/test_webhook_integration.py::TestWebhookEndpoints::test_webhook_test_endpoint PASSED [ 65%]\ntests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_receive_valid_webhook FAILED [ 68%]\ntests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_receive_webhook_invalid_json FAILED [ 71%]\ntests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_receive_webhook_missing_required_fields FAILED [ 75%]\ntests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_webhook_signature_verification FAILED [ 78%]\ntests/integration/test_webhook_integration.py::TestWebhookDashboard::test_webhook_dashboard FAILED [ 81%]\ntests/integration/test_webhook_integration.py::TestWebhookProcessing::test_webhook_processing_task_triggered FAILED [ 84%]\ntests/integration/test_webhook_integration.py::TestWebhookProcessing::test_webhook_log_creation FAILED [ 87%]\ntests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_receive_webhook_invalid_source FAILED [ 90%]\ntests/integration/test_webhook_integration.py::TestWhatsAppWebhook::test_whatsapp_webhook_verification FAILED [ 93%]\ntests/integration/test_webhook_integration.py::TestWhatsAppWebhook::test_whatsapp_webhook_verification_invalid_token PASSED [ 96%]\ntests/integration/test_webhook_integration.py::TestWhatsAppWebhook::test_whatsapp_webhook_message_receive FAILED [100%]\n\n==================================== ERRORS ====================================\n__________ ERROR at setup of TestNewsAPI.test_list_news_authenticated __________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x7960c07e60d0>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('e0c8c974-fdc3-4a10-9e0c-6369665d8d7b'), datetime.datetime(2025, 7, 12, 1, 9, 6, 161086, tzinfo=datetime.timezon...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7960c07e60d0>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\ntag = <Tag: Test Tag>\n\n    @pytest.fixture\n    def news(db, category, subcategory, tag):\n        \"\"\"Create a test news article.\"\"\"\n>       news_item = News.objects.create(\n            title='Test News Article',\n            content='This is a test news article content with enough text to be meaningful.',\n            summary='Test summary',\n            source='Test Source',\n            author='Test Author',\n            category=category,\n            subcategory=subcategory,\n            published_at=timezone.now(),\n            is_published=True\n        )\n\ntests/conftest.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x7960c07e60d0>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('e0c8c974-fdc3-4a10-9e0c-6369665d8d7b'), datetime.datetime(2025, 7, 12, 1, 9, 6, 161086, tzinfo=datetime.timezon...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7960c07e60d0>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n_________ ERROR at setup of TestNewsAPI.test_list_news_unauthenticated _________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x7960c032ac90>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('b5f0bd01-44ec-40fe-be57-d88718851f5b'), datetime.datetime(2025, 7, 12, 1, 9, 6, 644470, tzinfo=datetime.timezon...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7960c032ac90>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\ntag = <Tag: Test Tag>\n\n    @pytest.fixture\n    def news(db, category, subcategory, tag):\n        \"\"\"Create a test news article.\"\"\"\n>       news_item = News.objects.create(\n            title='Test News Article',\n            content='This is a test news article content with enough text to be meaningful.',\n            summary='Test summary',\n            source='Test Source',\n            author='Test Author',\n            category=category,\n            subcategory=subcategory,\n            published_at=timezone.now(),\n            is_published=True\n        )\n\ntests/conftest.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x7960c032ac90>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('b5f0bd01-44ec-40fe-be57-d88718851f5b'), datetime.datetime(2025, 7, 12, 1, 9, 6, 644470, tzinfo=datetime.timezon...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7960c032ac90>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n_______________ ERROR at setup of TestNewsAPI.test_retrieve_news _______________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x7960c01dea50>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('58ef46ad-a00b-4f71-a6d7-50d64cc954f0'), datetime.datetime(2025, 7, 12, 1, 9, 7, 110880, tzinfo=datetime.timezon...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7960c01dea50>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\ntag = <Tag: Test Tag>\n\n    @pytest.fixture\n    def news(db, category, subcategory, tag):\n        \"\"\"Create a test news article.\"\"\"\n>       news_item = News.objects.create(\n            title='Test News Article',\n            content='This is a test news article content with enough text to be meaningful.',\n            summary='Test summary',\n            source='Test Source',\n            author='Test Author',\n            category=category,\n            subcategory=subcategory,\n            published_at=timezone.now(),\n            is_published=True\n        )\n\ntests/conftest.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x7960c01dea50>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('58ef46ad-a00b-4f71-a6d7-50d64cc954f0'), datetime.datetime(2025, 7, 12, 1, 9, 7, 110880, tzinfo=datetime.timezon...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x7960c01dea50>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n________________ ERROR at setup of TestNewsAPI.test_update_news ________________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x79607bee7950>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('bfe34b21-e8c6-4502-bf51-ae9c024f6025'), datetime.datetime(2025, 7, 12, 1, 9, 9, 643264, tzinfo=datetime.timezon...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x79607bee7950>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\ntag = <Tag: Test Tag>\n\n    @pytest.fixture\n    def news(db, category, subcategory, tag):\n        \"\"\"Create a test news article.\"\"\"\n>       news_item = News.objects.create(\n            title='Test News Article',\n            content='This is a test news article content with enough text to be meaningful.',\n            summary='Test summary',\n            source='Test Source',\n            author='Test Author',\n            category=category,\n            subcategory=subcategory,\n            published_at=timezone.now(),\n            is_published=True\n        )\n\ntests/conftest.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x79607bee7950>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('bfe34b21-e8c6-4502-bf51-ae9c024f6025'), datetime.datetime(2025, 7, 12, 1, 9, 9, 643264, tzinfo=datetime.timezon...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x79607bee7950>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n__________ ERROR at setup of TestNewsAPI.test_filter_news_by_category __________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x79607c49d890>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('1df2221f-b64f-4b5d-b8aa-9ecf8a8d00b2'), datetime.datetime(2025, 7, 12, 1, 9, 10, 32408, tzinfo=datetime.timezon...is is test news article number 1 with unique content.', 'This is test news article number 1 with unique content.', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x79607c49d890>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\n\n    @pytest.fixture\n    def multiple_news(db, category, subcategory):\n        \"\"\"Create multiple news articles for bulk testing.\"\"\"\n        news_items = []\n    \n        for i in range(5):\n>           news_item = News.objects.create(\n                title=f'Test News Article {i+1}',\n                content=f'This is test news article number {i+1} with unique content.',\n                source=f'Test Source {i+1}',\n                author=f'Test Author {i+1}',\n                category=category,\n                subcategory=subcategory if i % 2 == 0 else None,\n                published_at=timezone.now() - timedelta(days=i),\n                is_published=True,\n                is_urgent=i == 0  # First one is urgent\n            )\n\ntests/conftest.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x79607c49d890>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('1df2221f-b64f-4b5d-b8aa-9ecf8a8d00b2'), datetime.datetime(2025, 7, 12, 1, 9, 10, 32408, tzinfo=datetime.timezon...is is test news article number 1 with unique content.', 'This is test news article number 1 with unique content.', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x79607c49d890>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n________________ ERROR at setup of TestNewsAPI.test_search_news ________________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x79607bc08350>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('9dd10b2b-9ca1-4977-8c7d-50b69b8b4805'), datetime.datetime(2025, 7, 12, 1, 9, 10, 494261, tzinfo=datetime.timezo...is is test news article number 1 with unique content.', 'This is test news article number 1 with unique content.', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x79607bc08350>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\n\n    @pytest.fixture\n    def multiple_news(db, category, subcategory):\n        \"\"\"Create multiple news articles for bulk testing.\"\"\"\n        news_items = []\n    \n        for i in range(5):\n>           news_item = News.objects.create(\n                title=f'Test News Article {i+1}',\n                content=f'This is test news article number {i+1} with unique content.',\n                source=f'Test Source {i+1}',\n                author=f'Test Author {i+1}',\n                category=category,\n                subcategory=subcategory if i % 2 == 0 else None,\n                published_at=timezone.now() - timedelta(days=i),\n                is_published=True,\n                is_urgent=i == 0  # First one is urgent\n            )\n\ntests/conftest.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x79607bc08350>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('9dd10b2b-9ca1-4977-8c7d-50b69b8b4805'), datetime.datetime(2025, 7, 12, 1, 9, 10, 494261, tzinfo=datetime.timezo...is is test news article number 1 with unique content.', 'This is test news article number 1 with unique content.', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x79607bc08350>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n_____________ ERROR at setup of TestNewsAPI.test_mark_news_urgent ______________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x79607be4cb90>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('9deeb6fd-9b90-47d0-879c-e006db41ed7c'), datetime.datetime(2025, 7, 12, 1, 9, 10, 967847, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x79607be4cb90>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\ntag = <Tag: Test Tag>\n\n    @pytest.fixture\n    def news(db, category, subcategory, tag):\n        \"\"\"Create a test news article.\"\"\"\n>       news_item = News.objects.create(\n            title='Test News Article',\n            content='This is a test news article content with enough text to be meaningful.',\n            summary='Test summary',\n            source='Test Source',\n            author='Test Author',\n            category=category,\n            subcategory=subcategory,\n            published_at=timezone.now(),\n            is_published=True\n        )\n\ntests/conftest.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x79607be4cb90>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('9deeb6fd-9b90-47d0-879c-e006db41ed7c'), datetime.datetime(2025, 7, 12, 1, 9, 10, 967847, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x79607be4cb90>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n________________ ERROR at setup of TestNewsAPI.test_share_news _________________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x79607c2acb10>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('5cd0fb05-db56-4fb9-b3ee-ab15dab83ff8'), datetime.datetime(2025, 7, 12, 1, 9, 11, 358657, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x79607c2acb10>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\ntag = <Tag: Test Tag>\n\n    @pytest.fixture\n    def news(db, category, subcategory, tag):\n        \"\"\"Create a test news article.\"\"\"\n>       news_item = News.objects.create(\n            title='Test News Article',\n            content='This is a test news article content with enough text to be meaningful.',\n            summary='Test summary',\n            source='Test Source',\n            author='Test Author',\n            category=category,\n            subcategory=subcategory,\n            published_at=timezone.now(),\n            is_published=True\n        )\n\ntests/conftest.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x79607c2acb10>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('5cd0fb05-db56-4fb9-b3ee-ab15dab83ff8'), datetime.datetime(2025, 7, 12, 1, 9, 11, 358657, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x79607c2acb10>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n_____________ ERROR at setup of TestNewsAPI.test_get_related_news ______________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x79607b59bf50>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('57b640cc-f144-47a3-8ed9-6928a8466292'), datetime.datetime(2025, 7, 12, 1, 9, 11, 820709, tzinfo=datetime.timezo...is is test news article number 1 with unique content.', 'This is test news article number 1 with unique content.', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x79607b59bf50>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\n\n    @pytest.fixture\n    def multiple_news(db, category, subcategory):\n        \"\"\"Create multiple news articles for bulk testing.\"\"\"\n        news_items = []\n    \n        for i in range(5):\n>           news_item = News.objects.create(\n                title=f'Test News Article {i+1}',\n                content=f'This is test news article number {i+1} with unique content.',\n                source=f'Test Source {i+1}',\n                author=f'Test Author {i+1}',\n                category=category,\n                subcategory=subcategory if i % 2 == 0 else None,\n                published_at=timezone.now() - timedelta(days=i),\n                is_published=True,\n                is_urgent=i == 0  # First one is urgent\n            )\n\ntests/conftest.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x79607b59bf50>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('57b640cc-f144-47a3-8ed9-6928a8466292'), datetime.datetime(2025, 7, 12, 1, 9, 11, 820709, tzinfo=datetime.timezo...is is test news article number 1 with unique content.', 'This is test news article number 1 with unique content.', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x79607b59bf50>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n______________ ERROR at setup of TestNewsAPI.test_advanced_search ______________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x79607b87c610>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('58817d04-82e6-4a8b-af5c-780d75f121d5'), datetime.datetime(2025, 7, 12, 1, 9, 12, 282325, tzinfo=datetime.timezo...is is test news article number 1 with unique content.', 'This is test news article number 1 with unique content.', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x79607b87c610>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\n\n    @pytest.fixture\n    def multiple_news(db, category, subcategory):\n        \"\"\"Create multiple news articles for bulk testing.\"\"\"\n        news_items = []\n    \n        for i in range(5):\n>           news_item = News.objects.create(\n                title=f'Test News Article {i+1}',\n                content=f'This is test news article number {i+1} with unique content.',\n                source=f'Test Source {i+1}',\n                author=f'Test Author {i+1}',\n                category=category,\n                subcategory=subcategory if i % 2 == 0 else None,\n                published_at=timezone.now() - timedelta(days=i),\n                is_published=True,\n                is_urgent=i == 0  # First one is urgent\n            )\n\ntests/conftest.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x79607b87c610>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('58817d04-82e6-4a8b-af5c-780d75f121d5'), datetime.datetime(2025, 7, 12, 1, 9, 12, 282325, tzinfo=datetime.timezo...is is test news article number 1 with unique content.', 'This is test news article number 1 with unique content.', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x79607b87c610>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n__________ ERROR at setup of TestCategoryAPI.test_category_statistics __________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x79607c23c550>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('7dbae308-d7dc-4893-9d1c-21a8ed10f6b9'), datetime.datetime(2025, 7, 12, 1, 9, 13, 729329, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x79607c23c550>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\ntag = <Tag: Test Tag>\n\n    @pytest.fixture\n    def news(db, category, subcategory, tag):\n        \"\"\"Create a test news article.\"\"\"\n>       news_item = News.objects.create(\n            title='Test News Article',\n            content='This is a test news article content with enough text to be meaningful.',\n            summary='Test summary',\n            source='Test Source',\n            author='Test Author',\n            category=category,\n            subcategory=subcategory,\n            published_at=timezone.now(),\n            is_published=True\n        )\n\ntests/conftest.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x79607c23c550>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('7dbae308-d7dc-4893-9d1c-21a8ed10f6b9'), datetime.datetime(2025, 7, 12, 1, 9, 13, 729329, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x79607c23c550>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n___ ERROR at setup of TestNewsPermissions.test_unauthenticated_access_denied ___\n\nself = <django.db.backends.utils.CursorWrapper object at 0x79607b7682d0>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('c3cbdff2-bc54-4b57-a2c9-63512beea18c'), datetime.datetime(2025, 7, 12, 1, 9, 14, 571993, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x79607b7682d0>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\ndb = None, category = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\ntag = <Tag: Test Tag>\n\n    @pytest.fixture\n    def news(db, category, subcategory, tag):\n        \"\"\"Create a test news article.\"\"\"\n>       news_item = News.objects.create(\n            title='Test News Article',\n            content='This is a test news article content with enough text to be meaningful.',\n            summary='Test summary',\n            source='Test Source',\n            author='Test Author',\n            category=category,\n            subcategory=subcategory,\n            published_at=timezone.now(),\n            is_published=True\n        )\n\ntests/conftest.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x79607b7682d0>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('c3cbdff2-bc54-4b57-a2c9-63512beea18c'), datetime.datetime(2025, 7, 12, 1, 9, 14, 571993, tzinfo=datetime.timezo...c), 'Test News Article', 'This is a test news article content with enough text to be meaningful.', 'Test summary', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x79607b7682d0>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n=================================== FAILURES ===================================\n_________________________ TestNewsAPI.test_create_news _________________________\n\nself = <django.db.backends.utils.CursorWrapper object at 0x79607c5cb990>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('2e2f94ce-dee1-4bea-8d86-dfabe9c9de67'), datetime.datetime(2025, 7, 12, 1, 9, 8, 823821, tzinfo=datetime.timezon...created via API with sufficient content length.', 'This news was created via API with sufficient content length.', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x79607c5cb990>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: UniqueViolation\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.integration.test_news_api.TestNewsAPI object at 0x7960c1b65210>\nauthenticated_client = <rest_framework.test.APIClient object at 0x7960bfdcef10>\ncategory = <Category: Test Category>\nsubcategory = <Subcategory: Test Category - Test Subcategory>\n\n    def test_create_news(self, authenticated_client, category, subcategory):\n        \"\"\"Test creating news via API.\"\"\"\n        url = reverse('news:news-list')\n        data = {\n            'title': 'API Created News',\n            'content': 'This news was created via API with sufficient content length.',\n            'source': 'API Test',\n            'author': 'Test Author',\n            'category': str(category.id),\n            'subcategory': str(subcategory.id),\n            'tag_names': ['api', 'test'],\n            'is_published': True\n        }\n    \n>       response = authenticated_client.post(url, data)\n\ntests/integration/test_news_api.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/rest_framework/test.py:296: in post\n    response = super().post(\n/usr/local/lib/python3.11/site-packages/rest_framework/test.py:210: in post\n    return self.generic('POST', path, data, content_type, **extra)\n/usr/local/lib/python3.11/site-packages/rest_framework/test.py:234: in generic\n    return super().generic(\n/usr/local/lib/python3.11/site-packages/django/test/client.py:609: in generic\n    return self.request(**r)\n/usr/local/lib/python3.11/site-packages/rest_framework/test.py:286: in request\n    return super().request(**kwargs)\n/usr/local/lib/python3.11/site-packages/rest_framework/test.py:238: in request\n    request = super().request(**kwargs)\n/usr/local/lib/python3.11/site-packages/django/test/client.py:891: in request\n    self.check_exception(response)\n/usr/local/lib/python3.11/site-packages/django/test/client.py:738: in check_exception\n    raise exc_value\n/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py:55: in inner\n    response = get_response(request)\n/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py:197: in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py:56: in wrapper_view\n    return view_func(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/rest_framework/viewsets.py:125: in view\n    return self.dispatch(request, *args, **kwargs)\n/usr/local/lib/python3.11/site-packages/rest_framework/views.py:509: in dispatch\n    response = self.handle_exception(exc)\n/usr/local/lib/python3.11/site-packages/rest_framework/views.py:469: in handle_exception\n    self.raise_uncaught_exception(exc)\n/usr/local/lib/python3.11/site-packages/rest_framework/views.py:480: in raise_uncaught_exception\n    raise exc\n/usr/local/lib/python3.11/site-packages/rest_framework/views.py:506: in dispatch\n    response = handler(request, *args, **kwargs)\n/usr/local/lib/python3.11/site-packages/drf_spectacular/drainage.py:193: in wrapped_method\n    return method(self, request, *args, **kwargs)\n/usr/local/lib/python3.11/site-packages/rest_framework/mixins.py:19: in create\n    self.perform_create(serializer)\n/usr/local/lib/python3.11/site-packages/rest_framework/mixins.py:24: in perform_create\n    serializer.save()\n/usr/local/lib/python3.11/site-packages/rest_framework/serializers.py:212: in save\n    self.instance = self.create(validated_data)\napps/news/serializers.py:117: in create\n    news = News.objects.create(**validated_data)\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:658: in create\n    obj.save(force_insert=True, using=self.db)\napps/news/models.py:184: in save\n    super().save(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:814: in save\n    self.save_base(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:877: in save_base\n    updated = self._save_table(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1020: in _save_table\n    results = self._do_insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/base.py:1061: in _do_insert\n    return manager._insert(\n/usr/local/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/db/models/query.py:1805: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py:1822: in execute_sql\n    cursor.execute(sql, params)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:67: in execute\n    return self._execute_with_wrappers(\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:80: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:84: in _execute\n    with self.db.wrap_database_errors:\n/usr/local/lib/python3.11/site-packages/django/db/utils.py:91: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.utils.CursorWrapper object at 0x79607c5cb990>\nsql = 'INSERT INTO \"news_news\" (\"id\", \"created_at\", \"updated_at\", \"title\", \"content\", \"summary\", \"source\", \"source_url\", \"au...t\", \"share_count\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = (UUID('2e2f94ce-dee1-4bea-8d86-dfabe9c9de67'), datetime.datetime(2025, 7, 12, 1, 9, 8, 823821, tzinfo=datetime.timezon...created via API with sufficient content length.', 'This news was created via API with sufficient content length.', ...)\nignored_wrapper_args = (False, {'connection': <DatabaseWrapper vendor='postgresql' alias='default'>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x79607c5cb990>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\nE               django.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nE               DETAIL:  Key (external_id)=() already exists.\n\n/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py:89: IntegrityError\n----------------------------- Captured stderr call -----------------------------\nWARNING NLTK stopwords not available, using default Portuguese stopwords\nINFO Request started - POST /api/v1/news/articles/\nERROR Request failed - POST /api/v1/news/articles/ - duplicate key value violates unique constraint \"news_news_external_id_key\"\nDETAIL:  Key (external_id)=() already exists.\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py\", line 89, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nDETAIL:  Key (external_id)=() already exists.\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py\", line 56, in wrapper_view\n    return view_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/viewsets.py\", line 125, in view\n    return self.dispatch(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/views.py\", line 469, in handle_exception\n    self.raise_uncaught_exception(exc)\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/views.py\", line 480, in raise_uncaught_exception\n    raise exc\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/drf_spectacular/drainage.py\", line 193, in wrapped_method\n    return method(self, request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/mixins.py\", line 19, in create\n    self.perform_create(serializer)\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/mixins.py\", line 24, in perform_create\n    serializer.save()\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/serializers.py\", line 212, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/app/apps/news/serializers.py\", line 117, in create\n    news = News.objects.create(**validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 658, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/app/apps/news/models.py\", line 184, in save\n    super().save(*args, **kwargs)\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/base.py\", line 814, in save\n    self.save_base(\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/base.py\", line 877, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/base.py\", line 1020, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/base.py\", line 1061, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 1805, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py\", line 1822, in execute_sql\n    cursor.execute(sql, params)\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py\", line 67, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py\", line 80, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py\", line 84, in _execute\n    with self.db.wrap_database_errors:\n  File \"/usr/local/lib/python3.11/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py\", line 89, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nDETAIL:  Key (external_id)=() already exists.\n\nERROR Internal Server Error: /api/v1/news/articles/\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py\", line 89, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"news_news_external_id_key\"\nDETAIL:  Key (external_id)=() already exists.\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py\", line 56, in wrapper_view\n    return view_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/viewsets.py\", line 125, in view\n    return self.dispatch(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/views.py\", line 469, in handle_exception\n    self.raise_uncaught_exception(exc)\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/views.py\", line 480, in raise_uncaught_exception\n    raise exc\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/drf_spectacular/drainage.py\", line 193, in wrapped_method\n    return method(self, request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/mixins.py\", line 19, in create\n    self.perform_create(serializer)\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/mixins.py\", line 24, in perform_create\n    serializer.save()\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/serializers.py\", line 212, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/app/apps/news/serializers.py\", line 117, in create\n    news = News.objects.create(**validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 658, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/app/apps/news/models.py\", line 184, in save\n    super().save(*args, **kwargs)\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/base.py\", line 814, in save\n    self.save_base(\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/base.py\", line 877, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/base.py\", line 1020, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/base.py\", line 1061, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 1805, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py\", line 1822, in execute_sql\n    cursor.execute(sql, params)\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py\", line 67, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py\", line 80, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py\", line 84, in _execute\n    with self.db.wrap_database_errors:\n  File \"/usr/local/lib/python3.11/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py\", line 89, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: duplicate key value violates unique constraint \"news_news_external_id_key\"\nDETAIL:  Key (external_id)=() already exists.\n\nINFO Request completed - POST /api/v1/news/articles/ - 500\n------------------------------ Captured log call -------------------------------\nWARNING  apps.classification.classifier:classifier.py:47 NLTK stopwords not available, using default Portuguese stopwords\n_____________________ TestCategoryAPI.test_list_categories _____________________\n\nself = <tests.integration.test_news_api.TestCategoryAPI object at 0x7960c1b75e90>\nauthenticated_client = <rest_framework.test.APIClient object at 0x79607bbdf710>\ncategory = <Category: Test Category>\n\n    def test_list_categories(self, authenticated_client, category):\n        \"\"\"Test listing categories.\"\"\"\n        url = reverse('news:category-list')\n        response = authenticated_client.get(url)\n    \n        assert response.status_code == status.HTTP_200_OK\n        assert len(response.data) >= 1\n    \n>       category_data = response.data[0]\nE       KeyError: 0\n\ntests/integration/test_news_api.py:163: KeyError\n----------------------------- Captured stderr call -----------------------------\nINFO Request started - GET /api/v1/news/categories/\nINFO Request completed - GET /api/v1/news/categories/ - 200\n______________ TestNewsWebhookReceiver.test_receive_valid_webhook ______________\n\nself = <tests.integration.test_webhook_integration.TestNewsWebhookReceiver object at 0x7960c1f26c90>\napi_client = <rest_framework.test.APIClient object at 0x79607c033850>\nwebhook_source = <WebhookSource: Test Webhook Source>\nsample_webhook_data = {'author': 'Webhook Author', 'category_hint': 'test category', 'content': 'This is sample news content received via webhook. It contains enough text to be processed properly.', 'external_id': 'f49be613-487c-487e-b827-6329a397567f', ...}\nmock_celery = None\n\n    def test_receive_valid_webhook(self, api_client, webhook_source, sample_webhook_data, mock_celery):\n        \"\"\"Test receiving a valid webhook.\"\"\"\n        url = reverse('webhooks:news_webhook', kwargs={'source_name': webhook_source.name})\n    \n        response = api_client.post(\n            url,\n            data=json.dumps(sample_webhook_data),\n            content_type='application/json'\n        )\n    \n>       assert response.status_code == status.HTTP_200_OK\nE       assert 401 == 200\nE        +  where 401 = <JsonResponse status_code=401, \"application/json\">.status_code\nE        +  and   200 = status.HTTP_200_OK\n\ntests/integration/test_webhook_integration.py:86: AssertionError\n---------------------------- Captured stderr setup -----------------------------\nINFO Webhook source created: Test Webhook Source\n------------------------------ Captured log setup ------------------------------\nINFO     apps.webhooks.signals:signals.py:24 Webhook source created: Test Webhook Source\n----------------------------- Captured stderr call -----------------------------\nINFO Request started - POST /api/v1/webhooks/receive/Test Webhook Source/\nINFO Request completed - POST /api/v1/webhooks/receive/Test Webhook Source/ - 401\nWARNING Unauthorized: /api/v1/webhooks/receive/Test Webhook Source/\n__________ TestNewsWebhookReceiver.test_receive_webhook_invalid_json ___________\n\nself = <tests.integration.test_webhook_integration.TestNewsWebhookReceiver object at 0x7960c1f27e50>\napi_client = <rest_framework.test.APIClient object at 0x79607bed5e90>\nwebhook_source = <WebhookSource: Test Webhook Source>\n\n    def test_receive_webhook_invalid_json(self, api_client, webhook_source):\n        \"\"\"Test receiving webhook with invalid JSON.\"\"\"\n        url = reverse('webhooks:news_webhook', kwargs={'source_name': webhook_source.name})\n    \n        response = api_client.post(\n            url,\n            data='invalid json',\n            content_type='application/json'\n        )\n    \n>       assert response.status_code == status.HTTP_400_BAD_REQUEST\nE       assert 401 == 400\nE        +  where 401 = <JsonResponse status_code=401, \"application/json\">.status_code\nE        +  and   400 = status.HTTP_400_BAD_REQUEST\n\ntests/integration/test_webhook_integration.py:115: AssertionError\n---------------------------- Captured stderr setup -----------------------------\nINFO Webhook source created: Test Webhook Source\n------------------------------ Captured log setup ------------------------------\nINFO     apps.webhooks.signals:signals.py:24 Webhook source created: Test Webhook Source\n----------------------------- Captured stderr call -----------------------------\nINFO Request started - POST /api/v1/webhooks/receive/Test Webhook Source/\nINFO Request completed - POST /api/v1/webhooks/receive/Test Webhook Source/ - 401\nWARNING Unauthorized: /api/v1/webhooks/receive/Test Webhook Source/\n_____ TestNewsWebhookReceiver.test_receive_webhook_missing_required_fields _____\n\nself = <tests.integration.test_webhook_integration.TestNewsWebhookReceiver object at 0x7960c1f24390>\napi_client = <rest_framework.test.APIClient object at 0x79607c2bd190>\nwebhook_source = <WebhookSource: Test Webhook Source>, mock_celery = None\n\n    def test_receive_webhook_missing_required_fields(self, api_client, webhook_source, mock_celery):\n        \"\"\"Test receiving webhook with missing required fields.\"\"\"\n        url = reverse('webhooks:news_webhook', kwargs={'source_name': webhook_source.name})\n    \n        invalid_data = {\n            'title': 'Test News',\n            # Missing content, source\n        }\n    \n        response = api_client.post(\n            url,\n            data=json.dumps(invalid_data),\n            content_type='application/json'\n        )\n    \n        # Should accept the webhook but validation will fail in processing\n>       assert response.status_code == status.HTTP_200_OK\nE       assert 401 == 200\nE        +  where 401 = <JsonResponse status_code=401, \"application/json\">.status_code\nE        +  and   200 = status.HTTP_200_OK\n\ntests/integration/test_webhook_integration.py:133: AssertionError\n---------------------------- Captured stderr setup -----------------------------\nINFO Webhook source created: Test Webhook Source\n------------------------------ Captured log setup ------------------------------\nINFO     apps.webhooks.signals:signals.py:24 Webhook source created: Test Webhook Source\n----------------------------- Captured stderr call -----------------------------\nINFO Request started - POST /api/v1/webhooks/receive/Test Webhook Source/\nINFO Request completed - POST /api/v1/webhooks/receive/Test Webhook Source/ - 401\nWARNING Unauthorized: /api/v1/webhooks/receive/Test Webhook Source/\n_________ TestNewsWebhookReceiver.test_webhook_signature_verification __________\n\nself = <tests.integration.test_webhook_integration.TestNewsWebhookReceiver object at 0x7960c1f24e50>\nmock_verify = <MagicMock name='verify_webhook_signature' id='133455305115344'>\napi_client = <rest_framework.test.APIClient object at 0x79607c141150>\nwebhook_source = <WebhookSource: Test Webhook Source>\nsample_webhook_data = {'author': 'Webhook Author', 'category_hint': 'test category', 'content': 'This is sample news content received via webhook. It contains enough text to be processed properly.', 'external_id': '25d6306b-6d81-4b57-89a9-0626ea7c68b4', ...}\n\n    @patch('apps.webhooks.utils.verify_webhook_signature')\n    def test_webhook_signature_verification(self, mock_verify, api_client, webhook_source, sample_webhook_data):\n        \"\"\"Test webhook signature verification.\"\"\"\n        webhook_source.requires_authentication = True\n        webhook_source.save()\n    \n        # Test with valid signature\n        mock_verify.return_value = True\n        url = reverse('webhooks:news_webhook', kwargs={'source_name': webhook_source.name})\n    \n        response = api_client.post(\n            url,\n            data=json.dumps(sample_webhook_data),\n            content_type='application/json',\n            HTTP_X_HUB_SIGNATURE_256='sha256=valid_signature'\n        )\n    \n>       assert response.status_code == status.HTTP_200_OK\nE       assert 401 == 200\nE        +  where 401 = <JsonResponse status_code=401, \"application/json\">.status_code\nE        +  and   200 = status.HTTP_200_OK\n\ntests/integration/test_webhook_integration.py:152: AssertionError\n---------------------------- Captured stderr setup -----------------------------\nINFO Webhook source created: Test Webhook Source\n------------------------------ Captured log setup ------------------------------\nINFO     apps.webhooks.signals:signals.py:24 Webhook source created: Test Webhook Source\n----------------------------- Captured stderr call -----------------------------\nINFO Webhook source updated: Test Webhook Source\nINFO Request started - POST /api/v1/webhooks/receive/Test Webhook Source/\nINFO Request completed - POST /api/v1/webhooks/receive/Test Webhook Source/ - 401\nWARNING Unauthorized: /api/v1/webhooks/receive/Test Webhook Source/\n------------------------------ Captured log call -------------------------------\nINFO     apps.webhooks.signals:signals.py:24 Webhook source updated: Test Webhook Source\n_________________ TestWebhookDashboard.test_webhook_dashboard __________________\n\nself = <tests.integration.test_webhook_integration.TestWebhookDashboard object at 0x7960c2372b50>\nauthenticated_client = <rest_framework.test.APIClient object at 0x79607c2bd710>\nwebhook_source = <WebhookSource: Test Webhook Source>\n\n    def test_webhook_dashboard(self, authenticated_client, webhook_source):\n        \"\"\"Test webhook dashboard endpoint.\"\"\"\n        url = reverse('webhooks:dashboard')\n>       response = authenticated_client.get(url)\n\ntests/integration/test_webhook_integration.py:245: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/rest_framework/test.py:289: in get\n    response = super().get(path, data=data, **extra)\n/usr/local/lib/python3.11/site-packages/rest_framework/test.py:206: in get\n    return self.generic('GET', path, **r)\n/usr/local/lib/python3.11/site-packages/rest_framework/test.py:234: in generic\n    return super().generic(\n/usr/local/lib/python3.11/site-packages/django/test/client.py:609: in generic\n    return self.request(**r)\n/usr/local/lib/python3.11/site-packages/rest_framework/test.py:286: in request\n    return super().request(**kwargs)\n/usr/local/lib/python3.11/site-packages/rest_framework/test.py:238: in request\n    request = super().request(**kwargs)\n/usr/local/lib/python3.11/site-packages/django/test/client.py:891: in request\n    self.check_exception(response)\n/usr/local/lib/python3.11/site-packages/django/test/client.py:738: in check_exception\n    raise exc_value\n/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py:55: in inner\n    response = get_response(request)\n/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py:197: in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py:56: in wrapper_view\n    return view_func(*args, **kwargs)\n/usr/local/lib/python3.11/site-packages/django/views/generic/base.py:104: in view\n    return self.dispatch(request, *args, **kwargs)\n/usr/local/lib/python3.11/site-packages/rest_framework/views.py:509: in dispatch\n    response = self.handle_exception(exc)\n/usr/local/lib/python3.11/site-packages/rest_framework/views.py:469: in handle_exception\n    self.raise_uncaught_exception(exc)\n/usr/local/lib/python3.11/site-packages/rest_framework/views.py:480: in raise_uncaught_exception\n    raise exc\n/usr/local/lib/python3.11/site-packages/rest_framework/views.py:506: in dispatch\n    response = handler(request, *args, **kwargs)\n/usr/local/lib/python3.11/site-packages/rest_framework/decorators.py:50: in handler\n    return func(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <rest_framework.request.Request: GET '/api/v1/webhooks/dashboard/'>\n\n    @api_view(['GET'])\n    @permission_classes([IsAuthenticated])\n    @extend_schema(\n        summary=\"Get webhook dashboard data\",\n        description=\"Get aggregated webhook statistics for dashboard display.\"\n    )\n    def webhook_dashboard(request):\n        \"\"\"\n        Get webhook dashboard data.\n        \"\"\"\n        # Get recent statistics\n        today = timezone.now().date()\n        week_ago = today - timezone.timedelta(days=7)\n    \n        # Overall statistics\n        total_sources = WebhookSource.objects.filter(is_active=True).count()\n        total_logs = WebhookLog.objects.filter(created_at__date__gte=week_ago).count()\n        success_rate = WebhookLog.objects.filter(\n            created_at__date__gte=week_ago,\n            status='success'\n        ).count() / max(total_logs, 1) * 100\n    \n        # Recent activity\n        recent_logs = WebhookLog.objects.filter(\n            created_at__date__gte=week_ago\n        ).order_by('-created_at')[:10]\n    \n        # Source statistics\n        source_stats = []\n        for source in WebhookSource.objects.filter(is_active=True):\n            stats = WebhookStatistic.objects.filter(\n                source=source,\n                date__gte=week_ago\n            ).aggregate(\n>               total_requests=models.Sum('total_requests'),\n                successful_requests=models.Sum('successful_requests'),\n                failed_requests=models.Sum('failed_requests')\n            )\nE           NameError: name 'models' is not defined\n\napps/webhooks/views.py:404: NameError\n---------------------------- Captured stderr setup -----------------------------\nINFO Webhook source created: Test Webhook Source\n------------------------------ Captured log setup ------------------------------\nINFO     apps.webhooks.signals:signals.py:24 Webhook source created: Test Webhook Source\n----------------------------- Captured stderr call -----------------------------\nINFO Request started - GET /api/v1/webhooks/dashboard/\nERROR Request failed - GET /api/v1/webhooks/dashboard/ - name 'models' is not defined\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py\", line 56, in wrapper_view\n    return view_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/views/generic/base.py\", line 104, in view\n    return self.dispatch(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/views.py\", line 469, in handle_exception\n    self.raise_uncaught_exception(exc)\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/views.py\", line 480, in raise_uncaught_exception\n    raise exc\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/decorators.py\", line 50, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/app/apps/webhooks/views.py\", line 404, in webhook_dashboard\n    total_requests=models.Sum('total_requests'),\n                   ^^^^^^\nNameError: name 'models' is not defined\nERROR Internal Server Error: /api/v1/webhooks/dashboard/\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py\", line 56, in wrapper_view\n    return view_func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/views/generic/base.py\", line 104, in view\n    return self.dispatch(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/views.py\", line 469, in handle_exception\n    self.raise_uncaught_exception(exc)\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/views.py\", line 480, in raise_uncaught_exception\n    raise exc\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/rest_framework/decorators.py\", line 50, in handler\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/app/apps/webhooks/views.py\", line 404, in webhook_dashboard\n    total_requests=models.Sum('total_requests'),\n                   ^^^^^^\nNameError: name 'models' is not defined\nINFO Request completed - GET /api/v1/webhooks/dashboard/ - 500\n_________ TestWebhookProcessing.test_webhook_processing_task_triggered _________\n\nself = <tests.integration.test_webhook_integration.TestWebhookProcessing object at 0x7960c2373710>\nmock_task = <MagicMock name='delay' id='133455292752592'>\napi_client = <rest_framework.test.APIClient object at 0x79607b515e90>\nwebhook_source = <WebhookSource: Test Webhook Source>\nsample_webhook_data = {'author': 'Webhook Author', 'category_hint': 'test category', 'content': 'This is sample news content received via webhook. It contains enough text to be processed properly.', 'external_id': '1d4847ec-412d-4a12-8000-4699767c70e9', ...}\n\n    @patch('apps.webhooks.tasks.process_webhook_async.delay')\n    def test_webhook_processing_task_triggered(self, mock_task, api_client, webhook_source, sample_webhook_data):\n        \"\"\"Test that webhook processing task is triggered.\"\"\"\n        url = reverse('webhooks:news_webhook', kwargs={'source_name': webhook_source.name})\n    \n        response = api_client.post(\n            url,\n            data=json.dumps(sample_webhook_data),\n            content_type='application/json'\n        )\n    \n>       assert response.status_code == status.HTTP_200_OK\nE       assert 401 == 200\nE        +  where 401 = <JsonResponse status_code=401, \"application/json\">.status_code\nE        +  and   200 = status.HTTP_200_OK\n\ntests/integration/test_webhook_integration.py:273: AssertionError\n---------------------------- Captured stderr setup -----------------------------\nINFO Webhook source created: Test Webhook Source\n------------------------------ Captured log setup ------------------------------\nINFO     apps.webhooks.signals:signals.py:24 Webhook source created: Test Webhook Source\n----------------------------- Captured stderr call -----------------------------\nINFO Request started - POST /api/v1/webhooks/receive/Test Webhook Source/\nINFO Request completed - POST /api/v1/webhooks/receive/Test Webhook Source/ - 401\nWARNING Unauthorized: /api/v1/webhooks/receive/Test Webhook Source/\n_______________ TestWebhookProcessing.test_webhook_log_creation ________________\n\nself = <tests.integration.test_webhook_integration.TestWebhookProcessing object at 0x7960c2371390>\napi_client = <rest_framework.test.APIClient object at 0x79607c5c9e10>\nwebhook_source = <WebhookSource: Test Webhook Source>\nsample_webhook_data = {'author': 'Webhook Author', 'category_hint': 'test category', 'content': 'This is sample news content received via webhook. It contains enough text to be processed properly.', 'external_id': 'd46d683c-4ee6-4a20-a39b-4d2d7a19bc25', ...}\nmock_celery = None\n\n    def test_webhook_log_creation(self, api_client, webhook_source, sample_webhook_data, mock_celery):\n        \"\"\"Test that webhook logs are created properly.\"\"\"\n        initial_log_count = WebhookLog.objects.count()\n    \n        url = reverse('webhooks:news_webhook', kwargs={'source_name': webhook_source.name})\n    \n        response = api_client.post(\n            url,\n            data=json.dumps(sample_webhook_data),\n            content_type='application/json'\n        )\n    \n>       assert response.status_code == status.HTTP_200_OK\nE       assert 401 == 200\nE        +  where 401 = <JsonResponse status_code=401, \"application/json\">.status_code\nE        +  and   200 = status.HTTP_200_OK\n\ntests/integration/test_webhook_integration.py:290: AssertionError\n---------------------------- Captured stderr setup -----------------------------\nINFO Webhook source created: Test Webhook Source\n------------------------------ Captured log setup ------------------------------\nINFO     apps.webhooks.signals:signals.py:24 Webhook source created: Test Webhook Source\n----------------------------- Captured stderr call -----------------------------\nINFO Request started - POST /api/v1/webhooks/receive/Test Webhook Source/\nINFO Request completed - POST /api/v1/webhooks/receive/Test Webhook Source/ - 401\nWARNING Unauthorized: /api/v1/webhooks/receive/Test Webhook Source/\n_________ TestNewsWebhookReceiver.test_receive_webhook_invalid_source __________\n\nself = <tests.integration.test_webhook_integration.TestNewsWebhookReceiver object at 0x7960c1f273d0>\napi_client = <rest_framework.test.APIClient object at 0x79607c0573d0>\nsample_webhook_data = {'author': 'Webhook Author', 'category_hint': 'test category', 'content': 'This is sample news content received via webhook. It contains enough text to be processed properly.', 'external_id': '83ea2349-4cf5-4222-acdd-9ce30bcf62a7', ...}\n\n    def test_receive_webhook_invalid_source(self, api_client, sample_webhook_data):\n        \"\"\"Test receiving webhook with invalid source.\"\"\"\n        url = reverse('webhooks:news_webhook', kwargs={'source_name': 'nonexistent'})\n    \n        response = api_client.post(\n            url,\n            data=json.dumps(sample_webhook_data),\n            content_type='application/json'\n        )\n    \n>       assert response.status_code == status.HTTP_404_NOT_FOUND\nE       assert 500 == 404\nE        +  where 500 = <JsonResponse status_code=500, \"application/json\">.status_code\nE        +  and   404 = status.HTTP_404_NOT_FOUND\n\ntests/integration/test_webhook_integration.py:103: AssertionError\n----------------------------- Captured stderr call -----------------------------\nINFO Request started - POST /api/v1/webhooks/receive/nonexistent/\nERROR Error processing webhook: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\nTraceback (most recent call last):\n  File \"/app/apps/webhooks/views.py\", line 219, in news_webhook\n    source = WebhookSource.objects.get(name=source_name, is_active=True)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 633, in get\n    num = len(clone)\n          ^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 380, in __len__\n    self._fetch_all()\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 1881, in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 91, in __iter__\n    results = compiler.execute_sql(\n              ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py\", line 1560, in execute_sql\n    cursor = self.connection.cursor()\n             ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/utils/asyncio.py\", line 26, in inner\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/base/base.py\", line 330, in cursor\n    return self._cursor()\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/base/base.py\", line 306, in _cursor\n    self.ensure_connection()\n  File \"/usr/local/lib/python3.11/site-packages/pytest_django/plugin.py\", line 798, in _blocking_wrapper\n    raise RuntimeError(\nRuntimeError: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\nINFO Request completed - POST /api/v1/webhooks/receive/nonexistent/ - 500\nERROR Internal Server Error: /api/v1/webhooks/receive/nonexistent/\n------------------------------ Captured log call -------------------------------\nERROR    apps.webhooks.views:views.py:290 Error processing webhook: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\nTraceback (most recent call last):\n  File \"/app/apps/webhooks/views.py\", line 219, in news_webhook\n    source = WebhookSource.objects.get(name=source_name, is_active=True)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 633, in get\n    num = len(clone)\n          ^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 380, in __len__\n    self._fetch_all()\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 1881, in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 91, in __iter__\n    results = compiler.execute_sql(\n              ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py\", line 1560, in execute_sql\n    cursor = self.connection.cursor()\n             ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/utils/asyncio.py\", line 26, in inner\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/base/base.py\", line 330, in cursor\n    return self._cursor()\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/base/base.py\", line 306, in _cursor\n    self.ensure_connection()\n  File \"/usr/local/lib/python3.11/site-packages/pytest_django/plugin.py\", line 798, in _blocking_wrapper\n    raise RuntimeError(\nRuntimeError: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\n____________ TestWhatsAppWebhook.test_whatsapp_webhook_verification ____________\n\nself = <tests.integration.test_webhook_integration.TestWhatsAppWebhook object at 0x7960c1f25790>\napi_client = <rest_framework.test.APIClient object at 0x79607c315110>\n\n    def test_whatsapp_webhook_verification(self, api_client):\n        \"\"\"Test WhatsApp webhook verification.\"\"\"\n        url = reverse('webhooks:whatsapp_webhook')\n    \n        params = {\n            'hub.mode': 'subscribe',\n            'hub.challenge': 'test_challenge_string',\n            'hub.verify_token': 'test_verify_token'\n        }\n    \n        response = api_client.get(url, params)\n    \n>       assert response.status_code == status.HTTP_200_OK\nE       assert 400 == 200\nE        +  where 400 = <HttpResponse status_code=400, \"text/html; charset=utf-8\">.status_code\nE        +  and   200 = status.HTTP_200_OK\n\ntests/integration/test_webhook_integration.py:183: AssertionError\n----------------------------- Captured stderr call -----------------------------\nINFO Request started - GET /api/v1/webhooks/whatsapp/\nINFO Request completed - GET /api/v1/webhooks/whatsapp/ - 400\nWARNING Bad Request: /api/v1/webhooks/whatsapp/\n__________ TestWhatsAppWebhook.test_whatsapp_webhook_message_receive ___________\n\nself = <tests.integration.test_webhook_integration.TestWhatsAppWebhook object at 0x7960c23731d0>\napi_client = <rest_framework.test.APIClient object at 0x79607c5c36d0>\n\n    def test_whatsapp_webhook_message_receive(self, api_client):\n        \"\"\"Test receiving WhatsApp messages.\"\"\"\n        url = reverse('webhooks:whatsapp_webhook')\n    \n        whatsapp_data = {\n            'object': 'whatsapp_business_account',\n            'entry': [{\n                'id': 'entry_id',\n                'changes': [{\n                    'value': {\n                        'messaging_product': 'whatsapp',\n                        'metadata': {\n                            'phone_number_id': 'phone_id'\n                        },\n                        'messages': [{\n                            'id': 'message_id',\n                            'from': '5511999999999',\n                            'timestamp': '1234567890',\n                            'text': {\n                                'body': 'Hello from WhatsApp'\n                            },\n                            'type': 'text'\n                        }]\n                    },\n                    'field': 'messages'\n                }]\n            }]\n        }\n    \n        response = api_client.post(\n            url,\n            data=json.dumps(whatsapp_data),\n            content_type='application/json'\n        )\n    \n>       assert response.status_code == status.HTTP_200_OK\nE       assert 500 == 200\nE        +  where 500 = <JsonResponse status_code=500, \"application/json\">.status_code\nE        +  and   200 = status.HTTP_200_OK\n\ntests/integration/test_webhook_integration.py:235: AssertionError\n----------------------------- Captured stderr call -----------------------------\nINFO Request started - POST /api/v1/webhooks/whatsapp/\nERROR Error processing WhatsApp webhook: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\nTraceback (most recent call last):\n  File \"/app/apps/webhooks/views.py\", line 343, in whatsapp_webhook\n    source=WebhookSource.objects.get_or_create(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 916, in get_or_create\n    return self.get(**kwargs), False\n           ^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 633, in get\n    num = len(clone)\n          ^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 380, in __len__\n    self._fetch_all()\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 1881, in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 91, in __iter__\n    results = compiler.execute_sql(\n              ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py\", line 1560, in execute_sql\n    cursor = self.connection.cursor()\n             ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/utils/asyncio.py\", line 26, in inner\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/base/base.py\", line 330, in cursor\n    return self._cursor()\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/base/base.py\", line 306, in _cursor\n    self.ensure_connection()\n  File \"/usr/local/lib/python3.11/site-packages/pytest_django/plugin.py\", line 798, in _blocking_wrapper\n    raise RuntimeError(\nRuntimeError: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\nINFO Request completed - POST /api/v1/webhooks/whatsapp/ - 500\nERROR Internal Server Error: /api/v1/webhooks/whatsapp/\n------------------------------ Captured log call -------------------------------\nERROR    apps.webhooks.views:views.py:366 Error processing WhatsApp webhook: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\nTraceback (most recent call last):\n  File \"/app/apps/webhooks/views.py\", line 343, in whatsapp_webhook\n    source=WebhookSource.objects.get_or_create(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 916, in get_or_create\n    return self.get(**kwargs), False\n           ^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 633, in get\n    num = len(clone)\n          ^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 380, in __len__\n    self._fetch_all()\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 1881, in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/query.py\", line 91, in __iter__\n    results = compiler.execute_sql(\n              ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py\", line 1560, in execute_sql\n    cursor = self.connection.cursor()\n             ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/utils/asyncio.py\", line 26, in inner\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/base/base.py\", line 330, in cursor\n    return self._cursor()\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/django/db/backends/base/base.py\", line 306, in _cursor\n    self.ensure_connection()\n  File \"/usr/local/lib/python3.11/site-packages/pytest_django/plugin.py\", line 798, in _blocking_wrapper\n    raise RuntimeError(\nRuntimeError: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\n=============================== warnings summary ===============================\ntests/integration/test_news_api.py:9\n  /app/tests/integration/test_news_api.py:9: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\ntests/integration/test_news_api.py:151\n  /app/tests/integration/test_news_api.py:151: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\ntests/integration/test_news_api.py:195\n  /app/tests/integration/test_news_api.py:195: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\ntests/integration/test_news_api.py:222\n  /app/tests/integration/test_news_api.py:222: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\ntests/integration/test_webhook_integration.py:14\n  /app/tests/integration/test_webhook_integration.py:14: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\ntests/integration/test_webhook_integration.py:72\n  /app/tests/integration/test_webhook_integration.py:72: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\ntests/integration/test_webhook_integration.py:167\n  /app/tests/integration/test_webhook_integration.py:167: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\ntests/integration/test_webhook_integration.py:238\n  /app/tests/integration/test_webhook_integration.py:238: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\ntests/integration/test_webhook_integration.py:258\n  /app/tests/integration/test_webhook_integration.py:258: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/integration/test_news_api.py::TestNewsAPI::test_create_news - dj...\nFAILED tests/integration/test_news_api.py::TestCategoryAPI::test_list_categories\nFAILED tests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_receive_valid_webhook\nFAILED tests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_receive_webhook_invalid_json\nFAILED tests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_receive_webhook_missing_required_fields\nFAILED tests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_webhook_signature_verification\nFAILED tests/integration/test_webhook_integration.py::TestWebhookDashboard::test_webhook_dashboard\nFAILED tests/integration/test_webhook_integration.py::TestWebhookProcessing::test_webhook_processing_task_triggered\nFAILED tests/integration/test_webhook_integration.py::TestWebhookProcessing::test_webhook_log_creation\nFAILED tests/integration/test_webhook_integration.py::TestNewsWebhookReceiver::test_receive_webhook_invalid_source\nFAILED tests/integration/test_webhook_integration.py::TestWhatsAppWebhook::test_whatsapp_webhook_verification\nFAILED tests/integration/test_webhook_integration.py::TestWhatsAppWebhook::test_whatsapp_webhook_message_receive\nERROR tests/integration/test_news_api.py::TestNewsAPI::test_list_news_authenticated\nERROR tests/integration/test_news_api.py::TestNewsAPI::test_list_news_unauthenticated\nERROR tests/integration/test_news_api.py::TestNewsAPI::test_retrieve_news - d...\nERROR tests/integration/test_news_api.py::TestNewsAPI::test_update_news - dja...\nERROR tests/integration/test_news_api.py::TestNewsAPI::test_filter_news_by_category\nERROR tests/integration/test_news_api.py::TestNewsAPI::test_search_news - dja...\nERROR tests/integration/test_news_api.py::TestNewsAPI::test_mark_news_urgent\nERROR tests/integration/test_news_api.py::TestNewsAPI::test_share_news - djan...\nERROR tests/integration/test_news_api.py::TestNewsAPI::test_get_related_news\nERROR tests/integration/test_news_api.py::TestNewsAPI::test_advanced_search\nERROR tests/integration/test_news_api.py::TestCategoryAPI::test_category_statistics\nERROR tests/integration/test_news_api.py::TestNewsPermissions::test_unauthenticated_access_denied\n============= 12 failed, 8 passed, 9 warnings, 12 errors in 11.06s =============\n"
    },
    "api__api_v1_news_categories_": {
      "status": "passed",
      "response_code": 200
    },
    "api__api_v1_news_tags_": {
      "status": "passed",
      "response_code": 200
    },
    "api__api_v1_news_articles_": {
      "status": "passed",
      "response_code": 200
    },
    "api__api_docs_": {
      "status": "passed",
      "response_code": 200
    },
    "api__metrics": {
      "status": "passed",
      "response_code": 200
    },
    "api__celery_metrics_": {
      "status": "passed",
      "response_code": 200
    },
    "api__business_metrics_": {
      "status": "passed",
      "response_code": 200
    },
    "api__security_metrics_": {
      "status": "passed",
      "response_code": 200
    }
  },
  "demos": {
    "news_creation": {
      "status": "passed"
    },
    "classification": {
      "status": "passed"
    },
    "webhook_processing": {
      "status": "failed",
      "error": "HTTP 401"
    },
    "monitoring_metrics": {
      "status": "passed"
    }
  },
  "performance": {
    "/api/v1/news/articles/": {
      "avg_response_time": 0.0301924467086792,
      "max_response_time": 0.03138160705566406,
      "min_response_time": 0.028456449508666992,
      "requests_count": 10
    },
    "/api/v1/news/categories/": {
      "avg_response_time": 0.03850698471069336,
      "max_response_time": 0.04099845886230469,
      "min_response_time": 0.035106658935546875,
      "requests_count": 10
    },
    "/health/": {
      "avg_response_time": 0.004576873779296875,
      "max_response_time": 0.005268573760986328,
      "min_response_time": 0.004147768020629883,
      "requests_count": 10
    }
  },
  "health_checks": {
    "API Server": {
      "status": "healthy",
      "response_time": 0.004719
    },
    "Grafana": {
      "status": "healthy",
      "response_time": 0.002543
    },
    "Celery Monitoring": {
      "status": "healthy",
      "response_time": 1.01155
    },
    "Business Metrics": {
      "status": "healthy",
      "response_time": 0.004299
    },
    "Security Monitoring": {
      "status": "healthy",
      "response_time": 0.003933
    }
  },
  "monitoring": {
    "grafana": {
      "status": "available",
      "dashboard_count": 5,
      "dashboards": [
        {
          "id": 3,
          "uid": "celery-dashboard",
          "orgId": 1,
          "title": "Celery Task Monitoring",
          "uri": "db/celery-task-monitoring",
          "url": "/d/celery-dashboard/celery-task-monitoring",
          "slug": "",
          "type": "dash-db",
          "tags": [
            "celery",
            "monitoring",
            "tasks"
          ],
          "isStarred": false,
          "sortMeta": 0,
          "isDeleted": false
        },
        {
          "id": 2,
          "uid": "redis-dashboard",
          "orgId": 1,
          "title": "JOTA - Redis Dashboard",
          "uri": "db/jota-redis-dashboard",
          "url": "/d/redis-dashboard/jota-redis-dashboard",
          "slug": "",
          "type": "dash-db",
          "tags": [
            "cache",
            "jota",
            "redis"
          ],
          "isStarred": false,
          "sortMeta": 0,
          "isDeleted": false
        },
        {
          "id": 4,
          "uid": "business-dashboard",
          "orgId": 1,
          "title": "JOTA News - Business Metrics",
          "uri": "db/jota-news-business-metrics",
          "url": "/d/business-dashboard/jota-news-business-metrics",
          "slug": "",
          "type": "dash-db",
          "tags": [
            "business",
            "jota",
            "metrics",
            "news"
          ],
          "isStarred": false,
          "sortMeta": 0,
          "isDeleted": false
        },
        {
          "id": 5,
          "uid": "security-dashboard",
          "orgId": 1,
          "title": "JOTA News - Security Monitoring",
          "uri": "db/jota-news-security-monitoring",
          "url": "/d/security-dashboard/jota-news-security-monitoring",
          "slug": "",
          "type": "dash-db",
          "tags": [
            "auth",
            "jota",
            "monitoring",
            "security"
          ],
          "isStarred": false,
          "sortMeta": 0,
          "isDeleted": false
        },
        {
          "id": 1,
          "uid": "jota-news-complete",
          "orgId": 1,
          "title": "JOTA News System - Complete Dashboard",
          "uri": "db/jota-news-system-complete-dashboard",
          "url": "/d/jota-news-complete/jota-news-system-complete-dashboard",
          "slug": "",
          "type": "dash-db",
          "tags": [
            "jota",
            "monitoring",
            "news"
          ],
          "isStarred": false,
          "sortMeta": 0,
          "isDeleted": false
        }
      ]
    }
  },
  "summary": {
    "total_tests": 10,
    "passed_tests": 8,
    "failed_tests": 2,
    "success_rate": 80.0,
    "execution_time": "2025-07-11T22:09:25.604048"
  }
}